# ==============================================================================

# SpectraMind V50 — requirements-min.txt

# Minimal, Kaggle-friendly runtime: train/predict/diagnose only.

# Tight pins to match the full stack lineage while staying lean.

# ==============================================================================

# ----- Core CLI & Config -----

typer==0.12.3
rich==13.7.1
hydra-core==1.3.2
omegaconf==2.3.0
pyyaml==6.0.2
pydantic==2.8.2
python-dotenv==1.0.1
packaging==24.1
click==8.1.7
typing\_extensions==4.12.2     # stability helper for torch/pydantic

# ----- Scientific Python Stack -----

numpy==1.26.4
scipy==1.13.1
pandas==2.2.2
scikit-learn==1.4.2
threadpoolctl==3.5.0          # explicit pin for sklearn backend control
joblib==1.4.2
tqdm==4.66.4
psutil==5.9.8

# ----- PyTorch (no torch-geometric to keep it portable) -----

# Pin to the Kaggle preinstalled CUDA runtime; wheels are available on Kaggle.

torch==2.2.2
torchvision==0.17.2
torchaudio==2.2.2
Pillow==10.4.0                # imaging backend used by torchvision

# ----- Visualization / Diagnostics (light) -----

matplotlib==3.8.4
umap-learn==0.5.6
shap==0.45.0

# ==============================================================================

# Notes:

# • Safe for Kaggle: avoids heavy/extra services (DVC/MLflow/W\&B/astropy/torch-geometric/plotly).

# • SHAP relies on matplotlib (kept); Plotly omitted to stay minimal.

# • Explicit pins for typing\_extensions, threadpoolctl, and Pillow improve runtime stability.

# • Versions align with requirements.txt to prevent environment drift across CI/Kaggle/local.

# • If you need CUDA‑specific torch wheels locally, install via PyTorch index flags (outside this file).

# ==============================================================================
