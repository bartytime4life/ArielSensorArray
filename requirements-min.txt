# ==============================================================================
# SpectraMind V50 — requirements-min.txt
# Minimal, Kaggle-friendly runtime for train/predict/diagnose.
# Tight pins that mirror the full stack to prevent drift.
# ==============================================================================

# ----- Core CLI & Config -----
typer==0.12.3
rich==13.7.1
hydra-core==1.3.2
omegaconf==2.3.0
pyyaml==6.0.2
pydantic==2.8.2
python-dotenv==1.0.1
packaging==24.1
click==8.1.7
typing_extensions==4.12.2

# ----- Scientific Python Stack -----
numpy==1.26.4            # compatible with torch==2.2.x; Kaggle images ship this line
scipy==1.13.1
pandas==2.2.2
scikit-learn==1.4.2
threadpoolctl==3.5.0     # explicit pin for sklearn/OpenMP backend
joblib==1.4.2
tqdm==4.66.4
psutil==5.9.8

# ----- PyTorch (no torch-geometric to keep it portable) -----
# Kaggle images usually preinstall the matching CUDA runtime.
torch==2.2.2
torchvision==0.17.2
torchaudio==2.2.2
Pillow==10.4.0            # imaging backend used by torchvision

# ----- Visualization / Diagnostics (light) -----
matplotlib==3.8.4
umap-learn==0.5.6
shap==0.45.0              # uses matplotlib backend here

# ==============================================================================
# Notes:
# • Minimal set: no DVC/MLflow/W&B/plotly/torch-geometric/astropy — keeps wheels small & portable.
# • Pins align with requirements.txt to avoid CI/Kaggle/local drift.
# • If you need CUDA-specific torch wheels locally, install via PyTorch index flags (outside this file), e.g.:
#     pip install --index-url https://download.pytorch.org/whl/cu121 \
#       torch==2.2.2 torchvision==0.17.2 torchaudio==2.2.2
# • If Kaggle already has torch preinstalled, re-pinning is harmless and ensures deterministic versions.
# ==============================================================================
