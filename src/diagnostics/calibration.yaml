```yaml
# configs/diagnostics/calibration.yaml
# ==============================================================================
# ðŸŽ¯ Uncertainty Calibration Diagnostics
# SpectraMind V50 â€” NeurIPS 2025 Ariel Data Challenge
# ------------------------------------------------------------------------------
# Purpose:
#   Evaluate predicted uncertainties (Ïƒ) against residuals (|Î¼ - y|).
#   Includes reliability diagrams, quantile coverage, z-score histograms,
#   molecule-region calibration, per-split/planet summaries, temp scaling, and COREL hooks.
#
# Hydra:
#   Hydra-safe; override at CLI, e.g.:
#     spectramind diagnose calibration \
#       calibration.coverage.quantiles="[0.05,0.5,0.95]" \
#       calibration.temp_scale.enable=true
#
# Outputs:
#   â€¢ PNG/HTML plots
#   â€¢ CSV/JSON summaries (per-bin / per-molecule / per-split / per-planet)
#   â€¢ Bootstrap CIs & summary metrics
#   â€¢ Reproducibility logs with config hash & manifest
# ==============================================================================

# ----------------------------------------------------------------------
# Hydra defaults
# ----------------------------------------------------------------------
defaults:
  - override hydra/job_logging: default
  - override hydra/hydra_logging: default

calibration:
  enable: true

  # ------------------------------------------------------------------
  # Inputs & filtering
  # ------------------------------------------------------------------
  inputs:
    mu_path: "artifacts/predict/mu.npy"           # [N_planets, 283]
    sigma_path: "artifacts/predict/sigma.npy"     # same shape as mu
    y_path: "artifacts/labels/y.npy"              # ground-truth (optional on test)
    meta_csv: "artifacts/predict/meta.csv"        # planet_id, split, molecule_region, snr, etc.
    valid_mask_path: null                         # [N_planets, 283] (1=valid)
  filter:
    include_splits: ["train", "val", "test"]
    exclude_planets: []
    clamp_sigma_min: 1.0e-6                       # avoid zero Ïƒ
    clamp_sigma_max: null

  # ------------------------------------------------------------------
  # Coverage analysis (empirical vs nominal)
  # ------------------------------------------------------------------
  coverage:
    quantiles: [0.1, 0.2, 0.5, 0.8, 0.9]          # target coverage levels
    per_bin: true                                 # per spectral bin
    per_molecule_region: true                     # H2O, CO2, CH4, etc.
    per_split: true
    per_planet: true
    temporal_slices: false                        # if transit phase available in meta
    stratify_by: ["snr_bucket", "molecule_region"]
    bootstrap:
      enable: true
      n_resamples: 500
      ci: 0.95

  # ------------------------------------------------------------------
  # Reliability diagrams (expected calibration error)
  # ------------------------------------------------------------------
  reliability:
    n_bins: 15
    min_count_per_bin: 25
    compute_ece: true                              # Expected Calibration Error
    compute_mce: true                              # Maximum Calibration Error
    per_split: true
    per_molecule_region: true
    weighted: true                                 # weight by precision/SNR where available

  # ------------------------------------------------------------------
  # Z-score evaluation
  # ------------------------------------------------------------------
  zscore:
    enable: true
    clip: 6.0                                      # clip extreme z
    per_bin: true
    per_molecule_region: true
    normality_tests:
      enable: true
      tests: ["shapiro", "anderson"]               # run on grouped z-scores

  # ------------------------------------------------------------------
  # Post-hoc calibration (temperature & per-bin scaling)
  # ------------------------------------------------------------------
  temp_scale:
    enable: false
    mode: "global"                                 # global | per_bin | per_molecule
    optimizer: "lbfgs"                             # lbfgs | adam
    max_iter: 200
    tol: 1.0e-6
    export_json: "calibration/temp_scale.json"
  per_bin_scale:
    enable: false
    l2_reg: 1.0e-3
    export_json: "calibration/per_bin_scale.json"

  # ------------------------------------------------------------------
  # COREL calibration integration (binwise conformal prediction)
  # ------------------------------------------------------------------
  corel:
    enable: true
    evaluate_coverage: true
    alpha: 0.1                                     # 1 - desired coverage
    use_graph_edges: true                          # leverage spectral/molecule adjacency
    export_heatmap: true
    heatmap_png: "calibration/corel_heatmap.png"
    summary_csv: "calibration/corel_summary.csv"

  # ------------------------------------------------------------------
  # Plotting options
  # ------------------------------------------------------------------
  plots:
    reliability_diagram: true
    reliability_per_split: true
    z_histogram: true
    per_bin_coverage: true
    molecule_region_coverage: true
    coverage_violin_by_split: true
    save_png: true
    save_html: true
    dpi: 160
    figsize: [9, 6]
    theme:
      background: "white"                          # white | dark
      palette: "astro"                             # astro | colorblind_safe | grayscale

  # ------------------------------------------------------------------
  # Export artifacts
  # ------------------------------------------------------------------
  export:
    coverage_csv: "calibration/coverage.csv"
    coverage_json: "calibration/coverage.json"
    per_split_csv: "calibration/coverage_by_split.csv"
    per_planet_csv: "calibration/coverage_by_planet.csv"
    per_bin_csv: "calibration/per_bin.csv"
    molecule_csv: "calibration/molecule_region.csv"
    reliability_png: "calibration/reliability.png"
    reliability_split_png: "calibration/reliability_by_split.png"
    z_hist_png: "calibration/z_hist.png"
    violin_split_png: "calibration/coverage_violin_by_split.png"
    summary_json: "calibration/summary.json"
    jsonl_events: "calibration/events.jsonl"

  # ------------------------------------------------------------------
  # Reproducibility & logging
  # ------------------------------------------------------------------
  reproducibility:
    log_hash: true                                 # record config hash in v50_debug_log.md
    snapshot_config: true                          # save this YAML with results
    run_manifest: "calibration/manifest.json"
    record_cli_invocation: true
    record_env: true                               # python/packages/cuda versions

  # ------------------------------------------------------------------
  # Performance & caching
  # ------------------------------------------------------------------
  cache:
    enable: true
    dir: ".cache/calibration"
    reuse_if_hash_matches: true
  parallel:
    workers: 8
    backend: "thread"                              # thread | process

  # ------------------------------------------------------------------
  # Failure policy
  # ------------------------------------------------------------------
  policy:
    fail_on_missing_labels: false                  # allow test sets; skip label-dependent evals
    warn_on_small_groups: true
    continue_on_plot_errors: true
```
