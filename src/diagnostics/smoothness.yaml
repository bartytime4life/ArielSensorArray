```yaml
# configs/diagnostics/smoothness.yaml
# ==============================================================================
# ðŸ§µ Spectral Smoothness Diagnostics (Î¼ spectra)
# SpectraMind V50 â€” NeurIPS 2025 Ariel Data Challenge
# ------------------------------------------------------------------------------
# Purpose:
#   Compute per-bin smoothness diagnostics on Î¼ spectra:
#     â€¢ L2 gradient / curvature (1st/2nd derivative magnitudes)
#     â€¢ Total Variation (TV)
#     â€¢ Optional Savitzkyâ€“Golay smoothing reference
#   Export heatmaps, anomaly flags, and CSV/JSON summaries.
#
# CLI override examples:
#   spectramind diagnose smoothness smoothness.l2.lambda=0.05
#   spectramind diagnose smoothness smoothness.tv.lambda=0.02 smoothness.flags.grad_mag_p95=1.75
# ==============================================================================

# ----------------------------------------------------------------------
# Hydra defaults
# ----------------------------------------------------------------------
defaults:
  - override hydra/job_logging: default
  - override hydra/hydra_logging: default

smoothness:
  enable: true

  # ------------------------------------------------------------------
  # Input handling
  # ------------------------------------------------------------------
  inputs:
    mu_path: "artifacts/predict/mu.npy"          # [N_planets, 283]
    meta_path: "artifacts/predict/meta.csv"      # planet_id, split, cluster, etc.

  # ------------------------------------------------------------------
  # Gradient / curvature settings
  # ------------------------------------------------------------------
  gradient:
    compute_first_order: true                    # |âˆ‚Î¼/âˆ‚Î»|
    compute_second_order: true                   # |âˆ‚Â²Î¼/âˆ‚Î»Â²|
    kernel: "central"                            # "forward" | "backward" | "central"
    eps: 1.0e-12                                 # numerical stability
    normalize_by_range: true                     # divide by (max-min) per planet

  # ------------------------------------------------------------------
  # Penalties / regularizers (analysis-time only; diagnostics do not mutate Î¼)
  # ------------------------------------------------------------------
  l2:
    enable: true
    lambda: 0.05                                 # weight used for reporting / ranking
    aggregate: ["mean", "p95", "max"]            # per-planet aggregations over bins

  tv:
    enable: true                                 # Total Variation = Î£ |Î”Î¼|
    lambda: 0.02
    aggregate: ["mean", "p95", "max"]

  savgol:
    enable: false                                # optional reference smoother
    window_length: 9                             # odd
    polyorder: 2
    report_residuals: true                       # |Î¼ - Î¼_savgol|

  # ------------------------------------------------------------------
  # Entropy map (optional information density proxy per bin)
  # ------------------------------------------------------------------
  entropy:
    enable: true
    method: "shannon"                            # placeholder; implemented in code
    window: 7
    normalize: true

  # ------------------------------------------------------------------
  # Molecule / region overlays (symbolic-aware reporting)
  # ------------------------------------------------------------------
  molecule_regions:
    enable: true
    labels: ["H2O", "CH4", "CO2"]                # used to group bins; resolved in code
    per_region_aggregates: ["mean", "p95", "max"]

  # ------------------------------------------------------------------
  # Flagging heuristics (non-binding; for dashboards & CI)
  # ------------------------------------------------------------------
  flags:
    grad_mag_p95: 1.50                           # flag planet if p95(|âˆ‚Î¼/âˆ‚Î»|) > threshold
    curvature_p95: 1.25                          # flag planet if p95(|âˆ‚Â²Î¼/âˆ‚Î»Â²|) > threshold
    tv_per_bin_max: 0.30                         # optional TV-based cap per bin (report only)
    min_bins_for_eval: 50                        # skip planets with fewer bins (masked)

  # ------------------------------------------------------------------
  # Plots
  # ------------------------------------------------------------------
  plots:
    gradient_heatmap: true                       # per-bin |âˆ‚Î¼/âˆ‚Î»| heatmap
    curvature_heatmap: true                      # per-bin |âˆ‚Â²Î¼/âˆ‚Î»Â²| heatmap
    tv_map: true                                 # per-bin TV contribution
    entropy_map: true
    overlay_symbolic_violations: true            # if symbolic masks are available
    dpi: 160
    figsize: [10, 4]
    save_png: true
    out_dir: "plots/smoothness"

  # ------------------------------------------------------------------
  # Exports
  # ------------------------------------------------------------------
  export:
    per_planet_csv: "smoothness/per_planet_metrics.csv"     # aggregates per planet
    per_bin_csv: "smoothness/per_bin_metrics.csv"           # per-planetÃ—bin values (long format or one file per planet)
    flags_csv: "smoothness/flags.csv"                       # planets/bins exceeding thresholds
    summary_json: "smoothness/summary.json"                 # global stats, thresholds, counts

  # ------------------------------------------------------------------
  # Reproducibility
  # ------------------------------------------------------------------
  reproducibility:
    log_hash: true                               # record config hash in v50_debug_log.md
    snapshot_config: true                        # save smoothness.yaml snapshot with outputs
    run_manifest: "smoothness/manifest.json"
```
