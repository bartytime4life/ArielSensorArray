# .dvc/params.yaml
# ==============================================================================
# SpectraMind V50 — Parameter Tracking for DVC (Upgraded, Challenge-Grade)
# ------------------------------------------------------------------------------
# Single source of truth for hyperparameters and pipeline knobs.
# Shared by Hydra configs, Typer CLI, and DVC stages to guarantee
# NASA-grade reproducibility, stable run hashing, and CI determinism.
# ==============================================================================

# -------------------------
# Reproducibility & Logging
# -------------------------
run:
  project: spectramind_v50
  tag: ""                        # Optional freeform tag appended to run hash
  seed: 1337                     # Global RNG seed (torch, numpy, python, cuda)
  seed_workers: true             # torch DataLoader worker_init_fn with global seed
  deterministic: true            # Enable cudnn_deterministic, disable benchmark
  cudnn_benchmark: false
  hash_inputs: true              # Include params + data manifest in run hash
  env_capture: true              # Persist env (pip freeze, git sha, cuda, drivers)
  save_dir: outputs              # Root for all pipeline artifacts
  time_fmt: "%Y%m%d-%H%M%S"     # Timestamp format for run folders
  resume_policy: "safe"          # safe|force|none (shape & hash checks)

logging:
  level: INFO
  jsonl_path: logs/events.jsonl
  tensorboard: true
  mlflow:
    enable: false
    uri: ""
    experiment: spectramind_v50
    run_name_from_hash: true
  rich_console: true
  log_interval: 50               # Steps between train logs
  val_interval: 1                # Epochs between validations
  keep_console_quiet_in_ci: true

# -------------
# Data & Paths
# -------------
data:
  # Input trees
  fgs1_path: data/raw/fgs1/
  airs_path: data/raw/airs/
  # Derived/calibrated outputs
  calibration_path: data/processed/calibration/
  processed_path: data/processed/
  cache_path: data/.cache/
  splits_file: data/splits/splits_v50.json
  manifest_file: data/manifest.jsonl         # hashed for run reproducibility
  # Shapes / constants
  bins: 283
  fgs1_bin_factor: 360                        # ~135k / 360 ≈ 375 steps
  airs_bin_factor: 30                         # ~11.3k / 30 ≈ 377 steps
  # Loader
  split_seed: 2025
  num_workers: 4
  pin_memory: true
  persistent_workers: true
  prefetch_factor: 2
  # Curriculum / masking (used by MAE/contrastive phases as well)
  snr_masking: true              # Mask by per-bin SNR during MAE pretrain
  molecule_masking: true         # Mask known molecular bands in curriculum
  curriculum: true               # Ramp unmasking over epochs
  jitter_augmentation: true      # Pointing jitter augmentation
  jitter_strength: 0.5           # Relative amplitude (0..1)
  normalize_mu: true             # Normalize spectra target μ
  normalize_sigma: false         # Keep σ in native units unless calibrating
  allow_missing: false           # Fail-fast if any required files missing
  dtype: "float32"               # I/O dtype for persisted arrays

# -----------------------------
# DataLoader & Batch Composition
# -----------------------------
loader:
  batch_size: 48                 # Per forward pass
  grad_accum_steps: 2            # Effective batch = batch_size * grad_accum
  shuffle: true
  drop_last: true
  collate: default               # or "packed", "padded"
  pad_to_multiple: 16            # if using packed/padded variants

# --------------
# Training Setup
# --------------
training:
  epochs: 100
  device: cuda                   # cuda|cpu|auto
  amp: true                      # torch.cuda.amp autocast
  amp_dtype: "bf16"              # fp16|bf16 (bf16 preferred on A100)
  grad_clip_norm: 1.0
  zero_grad: "set_to_none"       # faster gradient zeroing
  find_unused_parameters: false
  sync_batchnorm: false
  ddp:
    enable: false
    backend: "nccl"
    static_graph: true
  ema:
    enable: true
    decay: 0.999
    warmup: 500                  # steps to skip EMA or linearly ramp
  early_stop:
    enable: true
    patience: 15
    metric: val/gll              # Lower better unless noted
    mode: min
    min_delta: 0.0
  checkpoint:
    enable: true
    dir: outputs/checkpoints
    interval_epochs: 5
    keep_last: 3
    best_metric: val/gll
    save_best_only: true
    atomic_write: true
  resume:
    auto: true                   # Auto resume last run if shapes/config match
    path: ""                     # Manual override

# --------------
# Optimization
# --------------
optim:
  name: adamw
  lr: 0.00025
  betas: [0.9, 0.999]
  eps: 1.0e-08
  weight_decay: 0.01
  grad_centralization: false
  lookahead:
    enable: false
    alpha: 0.5
    k: 5
  scheduler:
    name: cosine                 # cosine|onecycle|plateau
    warmup_epochs: 5
    min_lr_mult: 0.1             # Final LR = base_lr * min_lr_mult
    t_mult: 1.0
    plateau:
      patience: 5
      factor: 0.5
      min_lr: 1.0e-6
  # Optional second stage fine-tuning (e.g., with lower LR)
  stage2:
    enable: false
    start_epoch: 80
    lr_mult: 0.25

# -----------
# Model Stack
# -----------
model:
  encoder: fgs1_mamba            # Long-sequence SSM encoder for FGS1
  gnn: airs_gnn                  # AIRS spectral GNN with edge features
  decoder: multi_scale_decoder   # Multi-scale μ spectrum decoder
  sigma_head: flow_uncertainty   # Flow-based σ head for uncertainty
  latent_dim: 256
  layers: 12
  heads: 8
  dropout: 0.10
  residual: true
  attention_fusion: true
  norm: layer
  # Symbolic / physics constraints
  symbolic_loss: true
  symbolic_weight: 0.20
  spectral_smoothness: true      # L2/FFT smoothness regularizer
  spectral_smoothness_weight: 0.05
  asymmetry_loss: true
  asymmetry_weight: 0.02
  nonnegativity_clamp: true
  # FGS1-first emphasis
  fgs1_weight: 58.0              # Weighted GLL term for channel 0 (metric parity)

# -----------------
# Calibration (UQ)
# -----------------
calibration:
  enable: true
  method: corel                  # corel|temp_scale|none
  per_bin: true
  coverage_target: 0.90
  temperature_scaling: true
  temperature_init: 1.0
  temperature_lr: 0.01
  temperature_max_iter: 1000
  # COREL specifics
  corel:
    k_neighbors: 8
    edge_features: ["distance", "molecule", "detector_region"]
    hidden_dim: 128
    layers: 3
    dropout: 0.10
    alpha: 0.05                  # (1 - coverage_target)
    spectral_pos_enc: true
  plots: true
  save_csv: outputs/calibration/per_bin.csv
  summary_json: outputs/calibration/summary.json

# -----------------------
# Diagnostics & Explainability
# -----------------------
diagnostics:
  shap: true
  shap_topk: 20
  umap: true
  umap_dim: 2
  tsne: true
  tsne_dim: 2
  fft: true
  fft_autocorr: true
  symbolic: true
  symbolic_profiles: configs/symbolic/profiles.yaml
  conformal: true
  gll_heatmap: true
  smoothness_map: true
  violation_overlay: true
  save_artifacts: outputs/diagnostics/
  html_report: outputs/diagnostics/report.html
  summary_json: outputs/diagnostics/diagnostic_summary.json
  log_images: false              # optionally store sample overlays

# -----------------
# Evaluation / E2E
# -----------------
eval:
  metrics:
    - gll
    - rmse
    - mae
    - calibration_error
  num_tta: 1                     # Test-time augmentation repeats
  ensemble:
    enable: false
    members: []                  # Paths to member checkpoints
  export:
    save_numpy: true
    save_csv: true
    dir: outputs/predictions/

# -----------------
# Submission Bundle
# -----------------
submission:
  bundle_dir: outputs/submission
  bundle_zip: outputs/submission/bundle.zip
  kaggle_format: true
  include_diagnostics: true
  validate_before_zip: true
  versioned: true                # Append run hash to version label
  csv_path: outputs/predictions/submission.csv
  manifest_path: outputs/submission/manifest.json

# ------------
# CI Settings
# ------------
ci:
  selftest: deep                 # fast|deep
  max_runtime: "9h"              # Kaggle GPU guardrail (human-readable)
  cache_datasets: true
  fail_on_violation: true
  violation_threshold: 0.05      # Max allowed symbolic violation rate
  log_jsonl: logs/ci_events.jsonl
  dvc_remote: "origin"           # Expected default DVC remote name
  artifacts:
    keep_last_runs: 5
    compress_html: true

# -----------------
# Ablations / Sweeps
# -----------------
ablate:
  enable: false
  grid:
    symbolic_weight: [0.0, 0.1, 0.2, 0.3]
    spectral_smoothness_weight: [0.0, 0.02, 0.05, 0.1]
    optim.lr: [0.00015, 0.00025, 0.00035]
  max_trials: 12
  selection_metric: val/gll
  selection_mode: min

# -----------------
# Sanity Guards (fail-fast)
# -----------------
guards:
  assert_nonneg_mu: true
  clamp_mu_min: 0.0
  max_sigma: 10.0                # defensive upper bound (unit-scale)
  allow_nan_inputs: false
  allow_nan_outputs: false
  stop_on_exploding_loss: true
  exploding_loss_threshold: 1.0e6