# configs/loss/gll.yaml
# ==============================================================================
# ðŸ“‰ Gaussian Log-Likelihood (GLL) Loss â€” Primary Challenge Metric
#
# Purpose
#   Implements the competition's official Gaussian log-likelihood loss:
#     L = 0.5 * Î£_bins [ log(2Ï€ÏƒÂ²) + (y - Î¼)Â² / ÏƒÂ² ]
#   where predictions are (Î¼, Ïƒ) for each wavelength bin.
#   This loss penalizes both inaccurate Î¼ and poorly calibrated Ïƒ.
#
# Features
#   â€¢ Supports per-bin weighting (e.g. symbolic priors, molecule-specific bins).
#   â€¢ Optional clipping of Ïƒ to enforce positivity + stability.
#   â€¢ Configurable reduction: mean | sum | none.
#   â€¢ Symbolic integration hooks (smoothness, FFT, molecular priors).
#   â€¢ Compatible with mixed-precision training (AMP-safe).
#
# Usage
#   In train.yaml:
#     defaults:
#       - loss: gll
#
#   CLI override example:
#     spectramind train loss.gll.sigma_min=1e-3 loss.gll.weighting=molecule
# ==============================================================================

gll:
  enabled: true

  # Reduction across bins/batch
  reduction: "mean"     # options: mean | sum | none

  # Minimum Ïƒ to avoid log(0) or negative values
  sigma_min: 1.0e-4

  # Weighting scheme
  weighting: "uniform"  # options:
                        #   uniform   â€“ equal weight per bin
                        #   molecule  â€“ weight by molecular fingerprint regions
                        #   entropy   â€“ weight bins with higher entropy more
                        #   custom    â€“ user-defined vector (see below)

  # Custom bin weights (optional, loaded from file or inline)
  custom_weights_path: null
  custom_weights_inline: []   # e.g. [1.0, 0.5, 0.5, ...]

  # Symbolic/physics-aware enhancements
  symbolic:
    smoothness_penalty: 0.0     # L2 penalty on Î¼ curvature (encourages smooth spectra)
    nonnegativity: true         # enforce Î¼ â‰¥ 0 with penalty
    fft_suppression: 0.0        # weight for high-frequency FFT penalty
    molecule_consistency: 0.0   # weight for enforcing molecular priors

  # Stability parameters
  clamp_sigma: true      # clamp Ïƒ to [sigma_min, inf) before loss calc
  detach_sigma_grad: false  # option to stop âˆ‚L/âˆ‚Ïƒ (debug/ablation)

  # Logging & diagnostics
  log_per_bin: true      # output per-bin GLL during diagnostics
  export_heatmap: true   # save heatmap of bin-wise GLL to diagnostics dashboard
  save_json: true        # write per-run loss config to gll_loss_config.json

  notes: |
    â€¢ GLL is the competitionâ€™s official metric:contentReference[oaicite:0]{index=0}.
    â€¢ Penalizes both underestimation (Ïƒ too small) and overconfidence.
    â€¢ With Ïƒ clipping and molecule-aware weighting, this loss balances accuracy
      and uncertainty calibration.
    â€¢ Symbolic hooks integrate physics priors: smoothness, FFT suppression,
      non-negativity, and molecular fingerprints:contentReference[oaicite:1]{index=1}:contentReference[oaicite:2]{index=2}.
