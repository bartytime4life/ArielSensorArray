# FILE: configs/calib/method/cds.yaml
# ==============================================================================
# ⚡ Correlated Double Sampling (CDS) — Method Config (v1.3, Mission-Grade)
# ------------------------------------------------------------------------------
# Purpose
#   Reduce kTC/reset noise and low-frequency (1/f) drifts by differencing RESET and
#   SIGNAL reads. Flexible pairing (index/timestamp), explicit RESET flags, static
#   reset frames fallback, robust outlier handling, optional temporal cleanup, QC,
#   and full uncertainty propagation with instrument-aware edge cases.
#
# Usage
#   Composed by your calibration chain (after flat) to produce CDS-corrected frames.
#   Examples:
#     spectramind calibrate calib.method.cds.pairing.policy=nearest \
#       calib.method.cds.pairing.window_s=3.0
#     spectramind calibrate calib.method.cds.reset_source.mode=static \
#       calib.method.cds.reset_source.static.path=calib/cds/reset_frame.tif
#     spectramind calibrate calib.method.cds.subtraction.order=signal_minus_reset
# ==============================================================================

_meta:
  schema_version: "1.3.0"
  last_updated: "${now:%Y-%m-%d}"

cds:
  enabled: true

  # ---------------------------------------------------------------------------
  # Geometry & units (informative; executor remains shape-agnostic)
  # ---------------------------------------------------------------------------
  frames:
    allow_3d: true                   # [B,H,W]
    allow_4d: true                   # [B,C,H,W] (applies per-channel if C>1)
    preferred_dtype_out: "float32"   # float32 | float16 | uint16 (if quantizing later)
    gain_e_per_adu: 1.0              # diagnostics/variance models
    read_noise_e: 5.0                # for uncertainty propagation
    instrument: "auto"               # auto | fgs1 | airs (for defaults below)

  # ---------------------------------------------------------------------------
  # Reset source & classification of reads
  # ---------------------------------------------------------------------------
  reset_source:
    # mode: explicit_flags | static | pattern | none
    mode: "explicit_flags"

    explicit_flags:
      key: "is_reset"                # metadata key (boolean)
      fallback_to_pattern: false

    static:
      path: "calib/cds/reset_frame.tif"
      scale:
        enabled: false
        by_exposure:
          enabled: false
          key_candidates: ["EXPTIME", "EXPOSURE"]
          fallback_seconds: 1.0
        by_temperature:
          enabled: false
          key_candidates: ["SENSOR_TEMP_C", "CCD-TEMP"]
          model: "linear"            # linear | exp
          params:
            slope_per_C: 0.02
            T0_C: 0.0
            A: 1.0
            B: 0.07

    pattern:
      scheme: "even_reset_odd_signal"   # even_reset_odd_signal | odd_reset_even_signal
      index_key: "frame_index"

  # ---------------------------------------------------------------------------
  # Pairing rules
  # ---------------------------------------------------------------------------
  pairing:
    policy: "nearest"               # n_minus_1 | nearest | exact | interpolate
    order_by: "index"               # index | timestamp
    timestamp_key: "acq_timestamp_s"
    index_key: "frame_index"
    window_s: 5.0                   # for timestamp-based nearest/exact/interpolate
    require_reset_before_signal: true
    # Handle rolling-shutter/interleaved cadence
    rolling_shutter:
      enabled: false
      line_time_us: 20.0            # μs per row (if known)

  # ---------------------------------------------------------------------------
  # Subtraction & robustness
  # ---------------------------------------------------------------------------
  subtraction:
    order: "signal_minus_reset"     # signal_minus_reset | reset_minus_signal
    noise_floor_dn: 0.0             # clamp tiny differences to 0 (static-reset use)
    sigma_clip:
      enabled: true
      sigma: 10.0
      max_iters: 1
    outlier_replace:
      enabled: true
      threshold_sigma: 12.0
      mode: "median4"               # median4 | median8 | gaussian3
      max_replace_fraction: 0.03

  # ---------------------------------------------------------------------------
  # Temporal cleanup (optional, post-CDS)
  # ---------------------------------------------------------------------------
  temporal_filter:
    enabled: false
    kind: "highpass"                # highpass | bandpass
    highpass_cutoff_frac: 0.05      # fraction of Nyquist
    bandpass_range: [0.02, 0.30]    # low/high as fractions of Nyquist
    zero_phase: true

  # ---------------------------------------------------------------------------
  # Normalization (optional)
  # ---------------------------------------------------------------------------
  normalization:
    enabled: false
    method: "mad"                   # none | mad | global_median
    eps: 1.0e-8

  # ---------------------------------------------------------------------------
  # Uncertainty propagation
  #   var(CDS) ≈ var(SIGNAL) + var(RESET) (assuming independence),
  #   with optional read-noise inclusion and static-reset variance model.
  # ---------------------------------------------------------------------------
  uncertainty:
    enabled: true
    include_read_noise: true
    # Variance sources — choose based on availability
    signal_variance_key: "var_signal"    # per-frame var map key (optional)
    reset_variance_key: "var_reset"      # per-frame var map key (optional)
    static_reset_var:
      enabled: true
      value_dn2: 0.0                     # constant var for static reset if maps absent
    write_variance_map: true
    clamp_min_var: 0.0
    clamp_max_var: null

  # ---------------------------------------------------------------------------
  # Quality control
  # ---------------------------------------------------------------------------
  qc:
    enabled: true
    max_unpaired_fraction: 0.10
    sample:
      fraction: 0.10
      min_samples: 2
      mean_dn_range: [-1000.0, 1000.0]
      std_dn_range: [0.1, 30000.0]
    histogram:
      bins: 256
      max_at_zero_frac: 0.25
    on_fail: "warn"                 # warn | raise | skip
    report:
      save: true
      path: "${oc.env:RUN_DIR, runs}/diag/cds/qc_report.json"

  # ---------------------------------------------------------------------------
  # IO mapping (pipeline/executor contract)
  # ---------------------------------------------------------------------------
  io:
    input_key: "flat_corrected"
    output_key: "cds_corrected"
    variance_key_out: "var_cds"     # name for propagated variance map
    metadata_keys:
      is_reset: ["is_reset"]
      timestamp: ["acq_timestamp_s"]
      index: ["frame_index"]

  # ---------------------------------------------------------------------------
  # Diagnostics & logging
  # ---------------------------------------------------------------------------
  diagnostics:
    enabled: true
    save_samples: 2                 # number of paired examples to dump
    output_dir: "${oc.env:RUN_DIR, runs}/diag/cds"
    save_images: false
    filename_prefix: "cds"
    plot_format: "png"

  logging:
    level: "INFO"                   # DEBUG | INFO | WARNING | ERROR

  # ---------------------------------------------------------------------------
  # Runtime & validation
  # ---------------------------------------------------------------------------
  runtime:
    num_workers: 2
    seed: 1337

  validation:
    require_metadata:
      timestamp_for_ts_mode: true
      index_for_index_mode: true
      is_reset_for_explicit_flags: true
    check_shape_compatibility: true
    assert_finite_output: true

  # ---------------------------------------------------------------------------
  # Profile overrides (fast / strict)
  # ---------------------------------------------------------------------------
  profile_overrides:
    fast:
      reset_source.mode: "pattern"
      pairing.policy: "n_minus_1"
      temporal_filter.enabled: false
      uncertainty.enabled: false
      diagnostics.enabled: false
    strict:
      reset_source.mode: "explicit_flags"
      pairing.policy: "nearest"
      pairing.order_by: "timestamp"
      pairing.window_s: 3.0
      temporal_filter.enabled: true
      temporal_filter.kind: "highpass"
      uncertainty.enabled: true
      uncertainty.static_reset_var.enabled: true

  notes: |
    • Prefer explicit RESET flags when available; otherwise use pattern or a static reset image.
    • Timestamp-based pairing with a constrained window is robust for interleaved/rolling readouts.
    • Propagate uncertainty: var_cds ≈ var_signal + var_reset (+ read_noise^2/e-^2→DN^2 if needed).
    • Use temporal_filter sparingly—applied post-CDS, zero-phase to avoid phase distortions.
    • QC checks protect against pairing failures, degenerate histograms, or unstable noise stats.