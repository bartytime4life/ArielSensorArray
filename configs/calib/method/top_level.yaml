# ==============================================================================
# ðŸ§­ Calibration Method â€” Top-Level Schema (v1.0)
# ------------------------------------------------------------------------------
# Role
#   Umbrella config for the calibration *method* chain used by SpectraMind V50.
#   Profiles (e.g., fast/nominal/strict) should import/override this file.
#
# Design
#   - Hydra-friendly keys; every stage has {enabled: bool} and a parameter block.
#   - Sane defaults; override per-profile without changing code.
#   - Kaggle-ready paths (read-only /kaggle/input and project data/ fallbacks).
#
# References
#   - Hydra composition for ML configs [oai_citation:7â€¡Hydra for AI Projects: A Comprehensive Guide.pdf](file-service://file-MpHwv9Z1E3qqzGXaQ3agpL)
#   - Savitzkyâ€“Golay detrending for low-frequency drift removal [oai_citation:8â€¡Advanced Techniques for Exoplanet Spectrum Extraction (NeurIPS Ariel Data Challenge 2024â€“2025).pdf](file-service://file-8dtJibU1RNLHYacRH9AmsG)
#   - FGS1-guided jitter/trace alignment & dual-channel strategy [oai_citation:9â€¡NeurIPS 2025 Ariel Data Challenge_ Dual-Channel End-to-End Solution.pdf](file-service://file-SJeTx7mG2ppmDvLxR2cKzf)
#   - FGS1/phase folding & nominal bin counts (â‰ˆ200) [oai_citation:10â€¡FGS1 Binning Strategies in Signal Processing and Machine Learning.pdf](file-service://file-ByCYzh8yGePmRDrGaJZicj)
#   - Kaggle mounting & no-internet runtime constraints [oai_citation:11â€¡Linking a Kaggle Notebook to the NeurIPS 2025 __Ariel Data Challenge__ Dataset.pdf](file-service://file-CJx4BY1j47jVgjFunfUSor) [oai_citation:12â€¡Upgrading the SpectraMind V50 Kaggle Notebook for NeurIPS 2025 Ariel Data Challenge.pdf](file-service://file-NEGQYKzDEMxUxZBjRBaNDT)
#   - Optional conformal (COREL) binwise calibration [oai_citation:13â€¡AI Design and Modeling.pdf](file-service://file-6oS7N1e7T9DKuWz68BoAPi)
# ==============================================================================

# -------- Global toggles & environment --------
env:
  # Where calibration lookup tables & masters live (fallback outside Kaggle)
  calib_root: "data/calib"
  # In Kaggle, competition data mounts here; keep code path-agnostic
  kaggle_input_root: "/kaggle/input"

runtime:
  # Hints to downstream CLI for budgeting; profiles can tighten/loosen
  kaggle_max_hours: 9        # Kaggle GPU budget (soft hint) [oai_citation:14â€¡Upgrading the SpectraMind V50 Kaggle Notebook for NeurIPS 2025 Ariel Data Challenge.pdf](file-service://file-NEGQYKzDEMxUxZBjRBaNDT)
  workers: 4                 # IO/CPU workers for preproc
  device: "auto"             # "auto" | "cpu" | "cuda"

# -------- Stage switches (set by profiles) --------
stages:
  adc: true
  dark: true
  flat: true
  cds: true
  photometry: true
  trace: true
  phase: true
  corel: false               # disabled by default; enable per-profile

# -------- ADC (Analog-to-Digital Conversion) --------
adc:
  enabled: ${stages.adc}
  offset:
    method: per_channel
    table_path: ${env.calib_root}/adc/offsets.npy
  gain:
    method: prnu
    table_path: ${env.calib_root}/adc/gain.npy
  linearization:
    method: lut
    lut_path: ${env.calib_root}/adc/lin_lut.npy
  overscan:
    enabled: true
    regions:                  # example overscan windows; override per detector
      A: {y: [0,2047], x: [2048,2095]}
      B: {y: [0,2047], x: [2096,2143]}

# -------- Dark Current Correction --------
dark:
  enabled: ${stages.dark}
  master_dark_path: ${env.calib_root}/dark/master_dark.fits
  scaling: exposure_time

# -------- Flat-Field Correction --------
flat:
  enabled: ${stages.flat}
  master_flat_path: ${env.calib_root}/flat/master_flat.fits
  method: normalized_division

# -------- Correlated Double Sampling (CDS) --------
cds:
  enabled: ${stages.cds}
  method: difference_pairs
  robust: true                # reject spikes (cosmic rays)

# -------- Photometry Extraction (FGS1) --------
photometry:
  enabled: ${stages.photometry}
  aperture:
    type: circular
    radius: 12               # profiles may set {fast: 10, strict: 14â€“16}
  background:
    method: annulus
    inner_radius: 15
    outer_radius: 20
  detrending:
    method: savgol           # Savitzkyâ€“Golay; drift removal [oai_citation:15â€¡Advanced Techniques for Exoplanet Spectrum Extraction (NeurIPS Ariel Data Challenge 2024â€“2025).pdf](file-service://file-8dtJibU1RNLHYacRH9AmsG)
    window: 101
    polyorder: 3
  normalization:
    method: baseline_out_of_transit

# -------- Spectrometer Trace Extraction (AIRS-CH0) --------
trace:
  enabled: ${stages.trace}
  extraction: sum_columns     # sum spatial direction along trace
  jitter_correction: fgs1_align   # use FGS1 for frame/phase alignment [oai_citation:16â€¡NeurIPS 2025 Ariel Data Challenge_ Dual-Channel End-to-End Solution.pdf](file-service://file-SJeTx7mG2ppmDvLxR2cKzf)
  cosmic_ray_reject: sigma_clip
  sigma_clip:
    sigma: 5.0
    max_iters: 3
  # Optional wavelength/axis info (override if competition provides parquet/CSV)
  axis_info_path: ${env.calib_root}/axis/axis_info.parquet

# -------- Phase Folding & Binning --------
phase:
  enabled: ${stages.phase}
  fold_ephemeris: true
  method: uniform
  bins: 200                   # nominal â‰ˆ200; fastâ‰ˆ120; strictâ‰ˆ400 [oai_citation:17â€¡FGS1 Binning Strategies in Signal Processing and Machine Learning.pdf](file-service://file-ByCYzh8yGePmRDrGaJZicj)
  jitter_residual_correction: true

# -------- Optional COREL (Conformal) Binwise Calibration --------
corel:
  enabled: ${stages.corel}
  method: binwise_conformal
  coverage_target: 0.68
  per_bin_csv_out: outputs/corel_binwise.csv

# -------- Contracts / sanity checks (guardrails) --------
contracts:
  nonnegativity: true         # enforce non-negative flux after normalization
  finite_only: true           # NaN/inf rejection gate
  max_outlier_sigma: 8.0      # hard clip to protect downstream loss
  # Minimum samples per phase bin to trust statistics (rebin if violated)
  min_samples_per_bin: 5

# -------- Expected artifacts (for downstream orchestration) --------
artifacts:
  lightcurves_fgs1: "outputs/calib/fgs1_lightcurves.parquet"
  lightcurves_airs: "outputs/calib/airs_lightcurves.parquet"
  phase_binned:     "outputs/calib/phase_binned.parquet"
  diagnostics_html: "outputs/calib/diagnostics.html"