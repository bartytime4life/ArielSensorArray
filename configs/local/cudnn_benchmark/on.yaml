# ==============================================================================
# ‚ö° cuDNN Autotune ‚Äî Enabled (v1.2)
# ------------------------------------------------------------------------------
# Purpose
#   ‚Ä¢ Enable cuDNN benchmarking: autotuner profiles multiple kernels and picks
#     the fastest for given tensor shapes.
#   ‚Ä¢ Best choice when batch size and input shapes remain consistent across
#     training iterations (common in leaderboard-scale training).
# ------------------------------------------------------------------------------
# Trade-offs
#   ‚Ä¢ ‚ö° Speed: Major speedup if shapes are fixed and conv-heavy ops dominate.
#   ‚Ä¢ ‚ùå Reproducibility: Kernel choice depends on driver, CUDA/cuDNN version,
#       and hardware ‚Üí results may differ across environments.
#   ‚Ä¢ ‚ö†Ô∏è If determinism is required, pair with:
#         local/precision/strict_deterministic.yaml
# ==============================================================================
cudnn_benchmark: true

# ------------------------------------------------------------------------------
# Extended Controls (optional)
# ------------------------------------------------------------------------------
# deterministic: false        # leave nondeterministic kernels allowed
# allow_tf32: true            # (Ampere+) enable TensorFloat32 for matmuls
# torch_compile_tune: true    # (PyTorch 2.x) allow Inductor/cuDNN kernel fusion

# ------------------------------------------------------------------------------
# üìì Notes
# ------------------------------------------------------------------------------
notes: |
  cuDNN autotuner enabled ‚Üí kernels profiled, fastest chosen.

  ‚Ä¢ Best performance when shapes remain fixed across batches/epochs.
  ‚Ä¢ Expect 5‚Äì25% throughput improvement vs. cudnn_benchmark=false.
  ‚Ä¢ Kernel choice may vary by GPU, driver, or cuDNN version.
  ‚Ä¢ Use for Kaggle leaderboard runs, HPC training, or long epochs with
    stable shapes.

  ‚úÖ Recommended: leaderboard training, HPC fixed-shape workloads  
  ‚ùå Avoid: CI pipelines, ablations, or reproducibility audits
