# ==============================================================================
# ‚öôÔ∏è DataLoader Workers ‚Äî Test / Inference (v1.2)
# ------------------------------------------------------------------------------
# Purpose
#   ‚Ä¢ Configure worker threads for test/inference dataloaders.
#   ‚Ä¢ Test is read-once and throughput-sensitive (especially in Kaggle submissions).
#   ‚Ä¢ Balance maximum speed vs. strict reproducibility for audits/CI.
# ------------------------------------------------------------------------------
# Trade-offs
#   ‚Ä¢ ‚ö° Speed: More workers increase throughput (important for ~1,100 test planets).
#   ‚Ä¢ ‚úÖ Stability: Too many workers on Kaggle can trigger watchdog resets or OOM.
#   ‚Ä¢ üîí Reproducibility: num_workers=0 ensures deterministic sample order (CI/audits).
# ==============================================================================

num_workers: 2   # Kaggle-safe default; scale up for HPC inference sweeps

# ------------------------------------------------------------------------------
# Extended Controls (optional, if consumed by trainer)
# ------------------------------------------------------------------------------
# prefetch_factor: 2        # batches prefetched per worker (default=2)
# persistent_workers: true  # keep workers alive between epochs (not critical for test)
# pin_memory: true          # speed up GPU transfers by pinning CPU memory

# ------------------------------------------------------------------------------
# üìì Notes
# ------------------------------------------------------------------------------
notes: |
  Test dataloader workers.

  ‚Ä¢ Default = 2 ‚Üí safe for Kaggle GPU submissions (balance speed + stability).
  ‚Ä¢ Use 8‚Äì16 on HPC inference runs if CPUs available (maximize throughput).
  ‚Ä¢ Use 0 for CI/audits to guarantee strict reproducibility and stable ordering.
  ‚Ä¢ Test loader is read-once, so determinism is usually less critical unless auditing.
  ‚Ä¢ Monitor runtime: too many workers can cause Kaggle watchdog restarts.
