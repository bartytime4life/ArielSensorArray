# ==============================================================================
# CONDA_ENV.yml — SpectraMind V50 (ArielSensorArray)
# ------------------------------------------------------------------------------
# Purpose:
#   • Optional Conda-based environment (parallel to Poetry) for contributors,
#     CI runners, or Kaggle images that prefer conda/mamba.
#   • GPU-ready PyTorch stack targeting CUDA 12.1 by default.
#
# Usage:
#   mamba env create -f CONDA_ENV.yml
#   conda activate spectramindv50
#
# CPU-ONLY SWITCH:
#   • Replace `pytorch-cuda=12.1` with `cpuonly` (from conda-forge) and remove `cudnn`.
#     Example:
#       - cpuonly
#       # - pytorch-cuda=12.1
#       # - cudnn
#
# ROCm (AMD) NOTE (optional):
#   • PyTorch ROCm wheels are best installed via pip on supported systems.
#     For ROCm builds, remove `pytorch::pytorch` here and install from pip:
#       pip install --index-url https://download.pytorch.org/whl/rocm6.0 torch torchvision torchaudio
#
# Local Project:
#   • Installs this repo in editable mode (`pip -e .`) so `spectramind` CLI resolves without Poetry.
# ==============================================================================

name: spectramindv50

channels:
  - pytorch
  - nvidia
  - conda-forge
channel_priority: strict

# Tip: Use mamba for faster solves:
#   conda install -n base -c conda-forge mamba
#   mamba env create -f CONDA_ENV.yml
dependencies:
  # --- Core Python toolchain ---
  - python=3.11
  - pip>=24
  - git
  - pkg-config
  - setuptools>=68
  - wheel

  # --- Numerical / Data ---
  - numpy
  - pandas
  - scipy
  - pyarrow            # fast parquet/arrow IO
  - fastparquet

  # --- Visualization ---
  - matplotlib
  - seaborn
  - graphviz           # system libs
  - python-graphviz    # Python bindings
  - tqdm

  # --- ML / Graph / Utils ---
  - scikit-learn
  - networkx

  # --- Jupyter / Notebooks ---
  - jupyterlab
  - notebook
  - ipykernel
  - ipywidgets

  # --- PyTorch (GPU by default) ---
  - pytorch::pytorch
  - pytorch::torchvision
  - pytorch::torchaudio
  - pytorch-cuda=12.1     # GPU toolchain; change to `cpuonly` for CPU envs (see header)
  - cudnn                 # remove for CPU-only

  # --- Lint / QA / Test ---
  - pre-commit
  - black
  - isort
  - ruff
  - mypy
  - pytest
  - pytest-cov

  # --- Docs toolchain (optional; used by docs workflows) ---
  - mkdocs
  - pip:
      - mkdocs-material
      - mkdocs-awesome-pages-plugin
      - mkdocs-git-revision-date-localized-plugin
      - mkdocs-section-index
      - mkdocs-glightbox
      - mkdocs-mermaid2-plugin
      - mkdocs-minify-plugin
      - mkdocs-redirects
      - mkdocs-include-markdown-plugin

  # --- Hydra / CLI / Logging ---
  - pip:
      - omegaconf>=2.3
      - hydra-core>=1.3
      - hydra-colorlog
      - hydra-joblib-launcher
      - typer[all]>=0.12
      - rich>=13

  # --- DVC & Remotes ---
  - pip:
      - dvc[ssh,s3,gdrive]>=3
      - dvc-s3>=3
      - dvc-gdrive>=3

  # --- Experiment tracking (optional) ---
  - pip:
      - wandb>=0.17
      - mlflow>=2.14

  # --- Kaggle API (optional) ---
  - pip:
      - kaggle>=1.6

  # --- Diagnostics / Explainability ---
  - pip:
      - shap>=0.45
      - umap-learn>=0.5
      - plotly>=5.22

  # --- (Optional) PyTorch Geometric stack ------------------------------------
  # NOTE:
  #  • These wheels depend on your exact torch + CUDA combo.
  #  • For CUDA 12.1 + torch 2.4.* you can use the cu121 indexes below.
  #  • If you change torch/CUDA versions, update the -f links accordingly.
  - pip:
      # core metapackage
      - torch-geometric>=2.5
      # low-level deps (match your torch/cuda build)
      - torch-scatter -f https://data.pyg.org/whl/torch-2.4.0+cu121.html
      - torch-sparse  -f https://data.pyg.org/whl/torch-2.4.0+cu121.html
      - torch-cluster -f https://data.pyg.org/whl/torch-2.4.0+cu121.html
      - torch-spline-conv -f https://data.pyg.org/whl/torch-2.4.0+cu121.html

  # --- (Optional) HF ecosystem commonly used in V50 toolchain -----------------
  - pip:
      - transformers>=4.42
      - accelerate>=0.32
      - datasets>=2.20
      - huggingface_hub>=0.23
      - peft>=0.11
      # uncomment if you plan to quantize large models locally
      # - bitsandbytes>=0.43

  # --- Install local project in editable mode (PEP 517) ---
  - pip:
      - -e .

# --- Environment variables on activation (Optional convenience) ---------------
variables:
  HYDRA_FULL_ERROR: "1"
  TRANSFORMERS_CACHE: "/workspace/.hf_cache"
  HF_HOME: "/workspace/.hf_cache"
  MPLBACKEND: "Agg"                  # safe headless matplotlib default

# --- Notes --------------------------------------------------------------------
# • CUDA Match: Ensure your host has a compatible NVIDIA driver for CUDA 12.1.
# • CPU/Kaggle: If you use CPU-only runners or Kaggle CPU images:
#     - swap `pytorch-cuda=12.1` -> `cpuonly` and remove `cudnn`
#     - remove/ignore the PyG CUDA wheel links or switch to CPU builds
# • Post-activation (recommended):
#     pre-commit install -t pre-commit -t pre-push
#     pytest -q
#     spectramind --help
