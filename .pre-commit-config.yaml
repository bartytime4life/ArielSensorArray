# SpectraMind V50 — pre-commit suite (code quality, security, notebooks, docs)
# Run locally:  pre-commit install && pre-commit run --all-files
# CI tip:       pre-commit run --all-files (as a separate step)

minimum_pre_commit_version: "3.5.0"

default_language_version:
  python: python3.11

repos:
  # ── EditorConfig enforcement ────────────────────────────────────────────────
  - repo: https://github.com/editorconfig-checker/editorconfig-checker.python
    rev: 3.3.0
    hooks:
      - id: editorconfig-checker
        alias: ec
        args: [--config=.editorconfig]
        exclude: |
          (?x)^(
            outputs/|
            logs/|
            \.dvc/|
            .*\.ipynb_checkpoints/|
            .*\.log$
          )

  # ── Python lint/format ─────────────────────────────────────────────────────
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.9
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  - repo: https://github.com/psf/black
    rev: 24.8.0
    hooks:
      - id: black
        args: ["--line-length=88"]

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black", "--line-length=88"]

  # Upgrade Python syntax to current target (safe transforms; complements Ruff)
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.1
    hooks:
      - id: pyupgrade
        args: ["--py310-plus"]

  # ── Type checking (fast fail for obvious issues) ────────────────────────────
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.11.2
    hooks:
      - id: mypy
        args:
          - --strict
          - --ignore-missing-imports
        additional_dependencies:
          - types-PyYAML==6.0.12.20240808
          - types-requests==2.32.0.20240712

  # ── Notebooks: lint/format via nbQA + strip outputs ─────────────────────────
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.9.1
    hooks:
      - id: nbqa-ruff
        args: [--fix]
      - id: nbqa-black
        args: ["--line-length=88"]
      - id: nbqa-isort
        args: ["--profile", "black", "--line-length=88"]
      # Optional: mypy for notebooks (enable if notebook code is typed)
      # - id: nbqa-mypy
      #   args: [--strict, --ignore-missing-imports]

  - repo: https://github.com/kynan/nbstripout
    rev: 0.7.1
    hooks:
      - id: nbstripout
        name: strip-notebook-outputs
        exclude: ^(docs/|data/|outputs/|benchmarks/)

  # ── General hygiene & safety ────────────────────────────────────────────────
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-added-large-files
        args: ["--maxkb=5120"]   # 5 MB cap; adjust to taste
        exclude: ^(data/|outputs/|docs/assets/|\.dvc/)
      - id: check-ast
      - id: check-builtin-literals
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-json
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-toml
      - id: check-xml
      - id: check-yaml
      - id: debug-statements
      - id: end-of-file-fixer
      - id: mixed-line-ending
        args: ["--fix=lf"]
      - id: name-tests-test
        args: ["--pytest"]
      - id: pretty-format-json
        args: ["--autofix", "--no-ensure-ascii", "--no-sort-keys"]
        files: "\\.json$"
      - id: trailing-whitespace
        exclude: \.md$           # keep Markdown spacing when needed

  # ── Docs & config formatting ────────────────────────────────────────────────
  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.17
    hooks:
      - id: mdformat
        additional_dependencies:
          - mdformat-gfm
          - mdformat-frontmatter
        files: "\\.(md|markdown|mdx)$"

  - repo: https://github.com/tox-dev/pyproject-fmt
    rev: 1.7.0
    hooks:
      - id: pyproject-fmt

  # YAML lint (style rules, beyond well-formedness)
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: ["-d", "{extends: default, rules: {line-length: {max: 120}, truthy: disable}}"]

  # GitHub Actions / JSON / YAML schema validation
  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.28.5
    hooks:
      - id: check-github-workflows
      - id: check-jsonschema
        name: check-jsonschema (generic)
        files: "\\.(json|ya?ml)$"

  # Format Markdown / JSON / YAML consistently (Prettier for docs/config)
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.3.3
    hooks:
      - id: prettier
        additional_dependencies: ["prettier@3.3.3"]
        files: "\\.(md|markdown|mdx|json|ya?ml)$"
        exclude: ^(docs/_build/|data/|outputs/)

  # ── Security: static & supply-chain ─────────────────────────────────────────
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.6.0
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]
        exclude: ^(data/|outputs/|docs/_build/)

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.9
    hooks:
      - id: bandit
        args: ["-q", "-r", "src", "-x", "tests"]

  - repo: https://github.com/pypa/pip-audit
    rev: v2.7.4
    hooks:
      - id: pip-audit
        args: ["--require-hashes=false", "--progress-spinner=off"]

  # Grep-based safety/sanity checks (eval, blanket except, etc.)
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-no-eval
      - id: python-no-log-warn
      - id: python-use-type-annotations

  # ── Shell / Docker / Actions ───────────────────────────────────────────────
  - repo: https://github.com/jumanjihouse/pre-commit-hooks
    rev: 3.0.0
    hooks:
      - id: shellcheck
      - id: shfmt
        args: ["-i", "2", "-ci", "-bn"]  # 2-space indent, POSIX-friendly

  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        name: hadolint (Dockerfile linter)
        files: ^(Dockerfile|.*[Dd]ockerfile.*)$

  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.3
    hooks:
      - id: actionlint
      name: actionlint (GitHub Actions linter)
      files: ^\.github/workflows/.*\.ya?ml$

  # ── Local hooks (repo-managed) ─────────────────────────────────────────────
  - repo: local
    hooks:
      - id: check-large-files-lfs
        name: Prevent committing large files without Git LFS (>50 MB)
        entry: bash scripts/pre_commit_check_lfs.sh
        language: system
        pass_filenames: true
        types_or: [file, binary]
        stages: [commit]

ci:
  autofix_prs: true
  autoupdate_schedule: quarterly

# Global excludes to keep hooks fast & non-noisy
exclude: |
  (?x)(
    ^\.venv/|
    ^venv/|
    ^ENV/|
    ^env/|
    ^__pycache__/|
    ^\.mypy_cache/|
    ^\.ruff_cache/|
    ^\.pytest_cache/|
    ^\.dvc/|
    ^\.git/|
    ^build/|
    ^dist/|
    ^data/|
    ^outputs/|
    ^logs/|
    ^docs/_build/
  )
