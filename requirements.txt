

⸻

======================================================================

SpectraMind V50 (ArielSensorArray) — requirements.txt  (2025-08)

–––––––––––––––––––––––––––––––––––

Goals:

• Stable, reproducible runtime for CLI-first, Hydra-configured pipeline

• Compatible with Kaggle (CPU/GPU/TPU) and local/CI

• Clear pins; heavy/optional deps grouped as extras (install only when needed)



Notes:

• PyTorch/torchvision/torchaudio: choose the wheel that matches your CUDA (or CPU-only).

• torch-geometric must match your torch/CUDA; use the official PyG wheel index.

• If running on Kaggle GPUs, verify the current CUDA toolchain, then pick the matching wheels.

======================================================================

––––––––––––––

Core CLI, config, logging

––––––––––––––

typer==0.12.3
rich==13.7.1
hydra-core==1.3.2
omegaconf==2.3.0
pyyaml==6.0.1
pydantic==2.7.1
packaging==24.1
jinja2==3.1.4
click==8.1.7

––––––––––––––

Numerics & ML

––––––––––––––

numpy==1.26.4
scipy==1.13.1
pandas==2.2.2
scikit-learn==1.4.2
einops==0.8.0

PyTorch (select the right wheel):

CPU-only:        pip install torch==2.2.2 torchvision==0.17.2 torchaudio==2.2.2

CUDA 11.8:       pip install torch==2.2.2+cu118 torchvision==0.17.2+cu118 torchaudio==2.2.2+cu118 -f https://download.pytorch.org/whl/torch_stable.html

CUDA 12.1:       pip install torch==2.2.2+cu121 torchvision==0.17.2+cu121 torchaudio==2.2.2+cu121 -f https://download.pytorch.org/whl/torch_stable.html

We keep the base lines here unpinned to a cuda build to avoid resolution conflicts:

torch==2.2.2
torchvision==0.17.2
torchaudio==2.2.2

––––––––––––––

Hugging Face stack (data, training, acceleration)

––––––––––––––

datasets==2.19.0
transformers==4.41.2
accelerate==0.31.0
tokenizers==0.15.2
safetensors==0.4.3
pyarrow==16.1.0  # for HF Datasets Arrow tables

––––––––––––––

Graph / geometry (AIRS GNN)

––––––––––––––

Install torch-geometric matching your torch/cuda from: https://data.pyg.org/whl/

Example (CPU):   pip install torch-geometric==2.5.3 -f https://data.pyg.org/whl/torch-2.2.0+cpu.html

Example (cu118): pip install torch-geometric==2.5.3 -f https://data.pyg.org/whl/torch-2.2.0+cu118.html

We list the version for lockfiles, but you still need to fetch from the PyG index:

torch-geometric==2.5.3 ; platform_system != “Windows”

––––––––––––––

Visualization & diagnostics

––––––––––––––

matplotlib==3.8.4
plotly==5.22.0
umap-learn==0.5.6
shap==0.45.0
tqdm==4.66.4
joblib==1.4.2
psutil==5.9.8

––––––––––––––

Data Version Control (DVC)

––––––––––––––

dvc==3.51.2

––––––––––––––

Optional experiment tracking (install on demand)

––––––––––––––

mlflow==2.14.3
wandb==0.17.6

======================================================================

Optional extras (install explicitly as needed)

• GPU remotes for DVC, HPO, Lightning trainer, SSM research utils, etc.

======================================================================

DVC remotes (pick one or more, e.g. pip install -r requirements.txt dvc[s3])

dvc[gdrive,gcs]==3.51.2

dvc[s3,boto3]==3.51.2

dvc[ssh]==3.51.2

dvc[azure]==3.51.2

Hyperparameter optimization

optuna==3.6.1

PyTorch Lightning (if you prefer Lightning to HF Trainer)

lightning==2.3.3

tensorboard==2.17.0

State-space / SSM research packages (install only if actively used in ablations)

mamba-ssm==2.2.2

state-spaces==0.4.0

Image/array utilities commonly useful in diagnostics

scikit-image==0.24.0

======================================================================

Dev-only tools (use a separate requirements-dev.txt in CI/locally)

–––––––––––––––––––––––––––––––––––

pytest==8.2.0

pytest-cov==5.0.0

ruff==0.6.9

black==24.8.0

isort==5.13.2

pre-commit==3.7.1

mypy==1.10.0

types-PyYAML==6.0.12.20240808

types-requests==2.32.0.20240712

======================================================================

––––––––––––––

Environment hints

––––––––––––––

• On Kaggle:

- Choose CPU/GPU/TPU in the Notebook Settings; GPU sessions are limited/rotated by quota.

- Match torch/torch-geometric wheels to the provided CUDA runtime. If unsure, prefer CPU wheels to avoid mismatch.

• On CI/local:

- Pin exact torch & torch-geometric wheels for your CUDA; record with your Hydra config + DVC for full reproducibility.

––––––––––––––

End of file

⸻
