# .github/workflows/ablation.yml
# ==============================================================================
# SpectraMind V50 — Ablation Runner (Hydra-safe)
# - Uses ablation_v50.yaml presets
# - PR: fast_eval only (≤ ~5–10 min)
# - Manual / nightly: run selected presets matrix, upload bundles
# ==============================================================================

name: Ablations

on:
  pull_request:
    branches: ["**"]
    paths:
      - "configs/ablation/**"
      - "configs/**"
      - "src/**"
      - "pyproject.toml"
      - "poetry.lock"
  schedule:
    - cron: "45 2 * * 2,5"   # Tue/Fri ~02:45 UTC
  workflow_dispatch:
    inputs:
      presets:
        description: "Comma-separated presets to run (default,light,strict_symbolic,fast_eval,gnn_ssm_ablate)"
        required: false
        default: "default,light"
      multirun:
        description: "Enable grid multirun (+grid.enable=true)"
        required: false
        default: "false"

permissions:
  contents: read

concurrency:
  group: ablations-${{ github.ref }}
  cancel-in-progress: true

env:
  PY: "3.12"
  POETRY_VERSION: "1.8.3"
  HYDRA_CFG: "configs/ablation/ablation_v50.yaml"
  OUTDIR: "outputs/ablations"

jobs:
  ablate:
    name: Run Ablation Presets
    runs-on: ubuntu-latest
    timeout-minutes: 90

    strategy:
      fail-fast: false
      matrix:
        preset: ${{ fromJSON('["default","light","strict_symbolic","fast_eval","gnn_ssm_ablate"]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PY }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY }}

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install "poetry==${POETRY_VERSION}"

      - name: Cache Poetry & pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
          key: ablate-${{ runner.os }}-py${{ env.PY }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ablate-${{ runner.os }}-py${{ env.PY }}-

      - name: Install project (main deps)
        run: |
          poetry install --no-interaction --no-ansi --without dev

      - name: Select presets for this event
        id: select
        run: |
          PRESETS="${{ github.event.inputs.presets }}"
          if [ -z "$PRESETS" ]; then
            # PRs: only fast_eval to keep CI under budget
            if [ "${{ github.event_name }}" = "pull_request" ]; then
              echo "presets=fast_eval" >> $GITHUB_OUTPUT
            else
              echo "presets=default,light" >> $GITHUB_OUTPUT
            fi
          else
            echo "presets=$PRESETS" >> $GITHUB_OUTPUT
          fi
          echo "multirun=${{ github.event.inputs.multirun || 'false' }}" >> $GITHUB_OUTPUT

      - name: Skip unrelated presets on PR
        if: ${{ github.event_name == 'pull_request' && matrix.preset != 'fast_eval' }}
        run: |
          echo "Skipping preset ${{ matrix.preset }} on PR to keep CI fast."
          echo "skipped" > skip.txt

      - name: Run ablation preset
        if: ${{ !(github.event_name == 'pull_request' && matrix.preset != 'fast_eval') }}
        run: |
          mkdir -p "${OUTDIR}"
          EXTRA=""
          if [ "${{ steps.select.outputs.multirun }}" = "true" ]; then
            EXTRA="+grid.enable=true -m"
          fi
          # Respect your guardrails/timebox; use the ablation preset hook
          poetry run spectramind ablate \
            ablation=${{ matrix.preset }} \
            --config-path configs/ablation \
            --config-name ablation_v50 \
            export.outdir="${OUTDIR}/${{ matrix.preset }}" \
            ${EXTRA} 2>&1 | tee "ablate_${{ matrix.preset }}.log"

      - name: Collect artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ablation-${{ matrix.preset }}
          path: |
            ablate_${{ matrix.preset }}.log
            outputs/ablations/${{ matrix.preset }}/**
          if-no-files-found: ignore
          retention-days: 7
