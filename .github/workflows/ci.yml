# ==============================================================================
# SpectraMind V50 — GitHub Actions CI
# Runs deterministic pipeline via: make -f makefile.ci ci
# - Poetry caching for fast installs
# - Optional DVC pull (safe no-op if not used)
# - Uploads outputs/ and logs/ as artifacts
# ==============================================================================

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch: {}

permissions:
  contents: read

env:
  PYTHONUNBUFFERED: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  POETRY_VERSION: "1.8.3"
  DEFAULT_PY: "3.11"

jobs:
  ci:
    name: Build • Test • Smoke (makefile.ci)
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      # --- Checkout repo ---
      - name: Checkout
        uses: actions/checkout@v4

      # --- Set up Python ---
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.DEFAULT_PY }}

      # --- Install Poetry ---
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry==${{ env.POETRY_VERSION }}

      # --- Cache Poetry deps (pip + poetry cache + virtualenv if created) ---
      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
            .venv
          key: poetry-${{ runner.os }}-${{ env.DEFAULT_PY }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-${{ env.DEFAULT_PY }}-

      # --- Install project dependencies ---
      - name: Install dependencies
        run: |
          poetry config virtualenvs.create true
          poetry install --no-root
          poetry --version
          python --version

      # --- Optional: DVC pull (safe no-op if not used or no remote set) ---
      - name: Setup DVC (optional)
        run: |
          python -m pip install --upgrade "dvc[all]" || python -m pip install --upgrade dvc
          dvc --version || true
      - name: DVC pull (optional)
        run: |
          make -f makefile.ci dvc-pull || true

      # --- Run the deterministic CI pipeline ---
      - name: Run CI pipeline (makefile.ci)
        run: |
          make -f makefile.ci ci

      # --- (Optional) also produce a submission to exercise predict path ---
      - name: Predict (optional)
        run: |
          make -f makefile.ci predict || true

      # --- Upload artifacts (outputs + logs) ---
      - name: Upload outputs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: outputs/
          if-no-files-found: ignore
          retention-days: 7

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: logs/
          if-no-files-found: ignore
          retention-days: 7
