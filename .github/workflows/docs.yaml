# .github/workflows/docs.yml
# ==============================================================================
# SpectraMind V50 — Docs (MkDocs Material) • build, validate, and deploy to Pages
# - Reproducible: pinned Python, pip cache, strict build, deterministic plugins
# - Robust validation: internal links (fail) + external links (soft, retried)
# - Optional Mermaid pre-render (npm), uploads site artifact on all runs
# - Deploys to GitHub Pages on main; PRs build + validate only
# ==============================================================================

name: docs

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - "**/*.ipynb_checkpoints/**"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/FUNDING.yml"
      - ".github/CODEOWNERS"
  pull_request:
    branches: [ "**" ]
    paths-ignore:
      - "**/*.ipynb_checkpoints/**"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/FUNDING.yml"
      - ".github/CODEOWNERS"
  workflow_dispatch: {}

# Minimal global permissions; jobs elevate only what they need
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: docs-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    # Fail fast & echo commands for easier troubleshooting
    shell: bash -euxo pipefail

jobs:
  build:
    name: Build & Validate Docs
    runs-on: ubuntu-latest
    timeout-minutes: 25

    env:
      PYTHONUNBUFFERED: "1"
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PIP_NO_PYTHON_VERSION_WARNING: "1"
      PY: "3.12"
      SITE_DIR: "site"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PY }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY }}
          cache: "pip"

      - name: Cache pip download directory
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: docs-pip-${{ runner.os }}-py${{ env.PY }}-${{ hashFiles('requirements-docs.txt', 'mkdocs.yml') }}
          restore-keys: |
            docs-pip-${{ runner.os }}-py${{ env.PY }}-

      - name: Install MkDocs + plugins (pin if no requirements-docs.txt)
        run: |
          python -m pip install --upgrade pip
          if [[ -f requirements-docs.txt ]]; then
            pip install -r requirements-docs.txt
          else
            # Pinned, widely compatible versions for reproducible builds
            pip install \
              "mkdocs==1.6.1" \
              "mkdocs-material==9.5.34" \
              "mkdocs-awesome-pages-plugin==2.9.2" \
              "mkdocs-git-revision-date-localized-plugin==1.2.6" \
              "mkdocs-section-index==0.3.9" \
              "mkdocs-glightbox==0.4.0" \
              "mkdocs-mermaid2-plugin==1.2.1" \
              "mkdocs-minify-plugin==0.8.0" \
              "mkdocs-redirects==1.2.1" \
              "mkdocs-include-markdown-plugin==6.2.2"
          fi
          mkdocs --version

      - name: Optional Mermaid pre-render (npm)
        run: |
          if command -v npm >/dev/null 2>&1 && [[ -f package.json ]]; then
            echo ">>> Rendering Mermaid diagrams via npm (optional)"
            make node-ci || true
            make node-diagrams || true
          else
            echo "Skipping node/mermaid (npm or package.json not found)"
          fi

      - name: Validate mkdocs.yml presence
        run: |
          test -f mkdocs.yml || (echo "::error::mkdocs.yml not found at repo root."; exit 1)

      - name: Build site (strict)
        run: |
          mkdocs build --strict --site-dir "${SITE_DIR}"

      # --- Link checking passes/fails ----------------------------------------
      # 1) Internal links (offline) must pass → fail build on errors
      - name: Check internal links (offline)
        uses: lycheeverse/lychee-action@v1
        with:
          args: >-
            --offline
            --require-https
            --verbose
            "${{ env.SITE_DIR }}/**/*.html"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 2) External links: allow transient failures; report but do not fail CI
      - name: Check external links (best-effort)
        id: lychee_external
        uses: lycheeverse/lychee-action@v1
        with:
          args: >-
            --accept 200,206,301,302,403,429
            --max-cache-age 1d
            --retry-wait-time 3
            --max-retries 2
            --user-agent "Mozilla/5.0 (CI link checker)"
            --exclude "https://fonts.gstatic.com"
            --exclude "https://fonts.googleapis.com"
            --exclude "mailto:*"
            --exclude "tel:*"
            --exclude "*.example.com"
            --verbose
            "${{ env.SITE_DIR }}/**/*.html"
            docs/**/*.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Summarize
        run: |
          echo "MkDocs site built to: ${SITE_DIR}"
          echo "External link check outcome: ${{ steps.lychee_external.outcome }}"
          echo "Tip: Review lychee logs above for transient 429/403s."

      - name: Upload Pages artifact (only main)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.SITE_DIR }}

      - name: Upload site artifact (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-site
          path: ${{ env.SITE_DIR }}
          if-no-files-found: warn
          retention-days: 14

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4