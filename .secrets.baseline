{
  "version": "1.6.0",
  "plugins_used": [
    {"name": "ArtifactoryDetector"},
    {"name": "AWSKeyDetector"},
    {"name": "AzureDevOpsDetector"},
    {"name": "AzureStorageKeyDetector"},
    {"name": "Base64HighEntropyString"},
    {"name": "BasicAuthDetector"},
    {"name": "CloudantDetector"},
    {"name": "DiscordBotTokenDetector"},
    {"name": "GitHubTokenDetector"},
    {"name": "GitLabTokenDetector"},
    {"name": "GoogleAPIKeyDetector"},
    {"name": "HexHighEntropyString"},
    {"name": "IbmCloudIamDetector"},
    {"name": "JwtTokenDetector"},
    {"name": "KeywordDetector"},
    {"name": "MailchimpDetector"},
    {"name": "NpmDetector"},
    {"name": "OpenAIDetector"},
    {"name": "PrivateKeyDetector"},
    {"name": "SendGridDetector"},
    {"name": "SlackDetector"},
    {"name": "SoftlayerDetector"},
    {"name": "SquareOAuthDetector"},
    {"name": "StripeDetector"},
    {"name": "TerraformCloudDetector"},
    {"name": "TwilioKeyDetector"}
  ],
  "exclude": {
    "files": "(?x)^(\n  (?:\\.git/|\\.dvc/|\\.venv/|venv/|ENV/|env/|node_modules/|\n     __pycache__/|\\.mypy_cache/|\\.pytest_cache/|\\.ruff_cache/|\\.tox/|\n     .idea/|.vscode/|logs/|outputs/|artifacts/|data/|docs/_build/)\n  | .*\\.(?:png|jpe?g|gif|ico|pdf|svg|bmp|webp|tiff)\n  | .*\\.(?:zip|tar|tgz|gz|7z|rar)\n  | .*\\.(?:bin|exe|dll|dylib|so)\n  | .*\\.(?:npy|npz|pkl|pt|pth|h5|onnx)\n  | .*\\.(?:parquet|feather|orc|avro)\n)$",
    "lines": "(?x)(?:\n  ^\\s*#\\s*allowlist-secret\\s*$                             # manual, per-line allowlist\n| (?:FAKE|DUMMY|EXAMPLE|TEST|PLACEHOLDER|SAMPLE)[-_]?(?:KEY|TOKEN|SECRET)   # obvious dummy tokens\n| (?<=\\b)(?:xxxx|zzzz|1111|0000|abcd){2,}(?=\\b)                              # repeated dummy patterns\n)"
  },
  "results": {},
  "filters_used": [
    {"path": "detect_secrets.filters.allowlist.is_line_allowlisted"},
    {"path": "detect_secrets.filters.common.is_baseline_file"},
    {"path": "detect_secrets.filters.common.is_ignored_due_to_verification_policies"},
    {"path": "detect_secrets.filters.heuristic.is_potential_uuid"},
    {"path": "detect_secrets.filters.heuristic.is_likely_id"},
    {"path": "detect_secrets.filters.heuristic.is_sequential_string"},
    {"path": "detect_secrets.filters.regex.should_verify"}
  ]
}
