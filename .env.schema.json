{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.org/spectramind/.env.schema.json",
  "title": "SpectraMind V50 .env Schema",
  "description": "Mission-grade JSON Schema to validate `.env` for the SpectraMind V50 pipeline. Ensures Hydra-safe configs, Kaggle alignment, MLflow/W&B logging, DVC/lakeFS reproducibility, and container reproducibility.",

  "type": "object",
  "additionalProperties": true,

  "properties": {
    "PROJECT_NAME": {
      "type": "string",
      "minLength": 1,
      "default": "SpectraMindV50",
      "description": "Human-friendly project name."
    },
    "PROJECT_STAGE": {
      "type": "string",
      "enum": ["dev", "test", "prod"],
      "default": "dev",
      "description": "Deployment stage / environment (affects CI, logging, Kaggle runtime)."
    },

    "CONFIG_FILE": {
      "type": "string",
      "pattern": "^(configs/).+\\.ya?ml$",
      "default": "configs/config_v50.yaml",
      "description": "Hydra root config path (composed at runtime)."
    },
    "HYDRA_FULL_ERROR": {
      "type": "string",
      "enum": ["0", "1"],
      "default": "1",
      "description": "Hydra exception verbosity (1 = full trace)."
    },

    "PYTHON_VERSION": {
      "type": "string",
      "pattern": "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$",
      "default": "3.11",
      "description": "Python version pinned in Poetry/Docker."
    },
    "POETRY_VIRTUALENVS_CREATE": {
      "type": "string",
      "enum": ["true", "false"],
      "default": "false",
      "description": "Create venvs in Poetry (false when Dockerized/Kaggle)."
    },
    "CUDA_VERSION": {
      "type": "string",
      "pattern": "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$",
      "default": "12.4",
      "description": "CUDA version to match Kaggle/Poetry/Docker base images."
    },
    "CUDNN_VERSION": {
      "type": "string",
      "pattern": "^[0-9]+(\\.[0-9]+)?$",
      "default": "9",
      "description": "cuDNN major/minor version."
    },

    "LOGS_DIR": { "type": "string", "default": "logs" },
    "OUT_DIR": { "type": "string", "default": "outputs" },
    "RUN_HASH_FILE": {
      "type": "string",
      "default": "run_hash_summary_v50.json",
      "description": "File to store reproducibility run hash summary."
    },

    "MLFLOW_TRACKING_URI": { "type": "string", "format": "uri", "nullable": true },
    "WANDB_API_KEY": { "type": "string", "minLength": 1, "nullable": true },
    "WANDB_PROJECT": { "type": "string", "default": "spectramind-v50" },
    "WANDB_ENTITY": { "type": "string", "nullable": true },

    "HF_HOME": {
      "type": "string",
      "default": "~/.cache/huggingface",
      "description": "Local cache dir for Hugging Face Hub [oai_citation:6‡Hugging Face AI Mastery: Setup, Training, and Deployment Guide.pdf](file-service://file-1PAxmgJfDVMz3BhpmCeDi1)."
    },
    "HF_TOKEN": { "type": "string", "nullable": true, "description": "Hugging Face auth token (if private repos used)." },

    "DATA_ROOT": { "type": "string", "default": "data" },
    "DVC_REMOTE": { "type": "string", "default": "origin" },
    "DVC_CACHE_DIR": { "type": "string", "default": ".dvc/cache" },
    "LAKEFS_ENDPOINT": { "type": "string", "format": "uri", "nullable": true },
    "LAKEFS_ACCESS_KEY": { "type": "string", "nullable": true },
    "LAKEFS_SECRET_KEY": { "type": "string", "nullable": true },

    "KAGGLE_USERNAME": { "type": "string", "nullable": true },
    "KAGGLE_KEY": { "type": "string", "nullable": true },
    "KAGGLE_COMPETITION": {
      "type": "string",
      "default": "neurips-2025-ariel",
      "description": "Competition slug [oai_citation:7‡Kaggle Platform: Comprehensive Technical Guide.pdf](file-service://file-CrgG895i84phyLsyW9FQgf)."
    },
    "KAGGLE_SUBMISSION_FILE": { "type": "string", "default": "outputs/submission.csv" },
    "KAGGLE_SUBMISSION_MSG": { "type": "string", "default": "SpectraMind V50 submission" },

    "DOCKER_IMAGE_NAME": { "type": "string", "default": "spectramindv50:dev" },
    "DOCKER_CONTAINER_NAME": { "type": "string", "default": "spectramindv50" },
    "DOCKER_PORT": {
      "type": "string",
      "pattern": "^[0-9]+$",
      "default": "8888",
      "description": "Notebook/docs exposure port."
    },

    "SPECTRAMIND_CLI": { "type": "string", "default": "spectramind" },
    "DIAGNOSTICS_REPORT": { "type": "string", "default": "outputs/diagnostics/report.html" },
    "ENABLE_RICH_LOGGING": { "type": "string", "enum": ["true", "false"], "default": "true" },

    "SECRET_KEY_BASE": { "type": "string", "minLength": 16, "nullable": true },
    "JWT_SECRET": { "type": "string", "minLength": 16, "nullable": true },
    "SERVICE_ACCOUNT_JSON": { "type": "string", "nullable": true },

    "GUI_FRAMEWORK": {
      "type": "string",
      "enum": ["qt", "electron", "react", "none"],
      "default": "none",
      "description": "Optional GUI/dash framework [oai_citation:8‡Comprehensive Guide to GUI Programming.pdf](file-service://file-NiTQ7cdQw7zGnLUVCUpoRx)."
    }
  },

  "required": [
    "PROJECT_NAME", "PROJECT_STAGE", "CONFIG_FILE", "HYDRA_FULL_ERROR",
    "PYTHON_VERSION", "POETRY_VIRTUALENVS_CREATE", "LOGS_DIR", "OUT_DIR",
    "RUN_HASH_FILE", "DATA_ROOT", "DVC_REMOTE", "DVC_CACHE_DIR",
    "KAGGLE_COMPETITION", "KAGGLE_SUBMISSION_FILE", "KAGGLE_SUBMISSION_MSG",
    "DOCKER_IMAGE_NAME", "DOCKER_CONTAINER_NAME", "DOCKER_PORT",
    "SPECTRAMIND_CLI", "DIAGNOSTICS_REPORT", "ENABLE_RICH_LOGGING"
  ],

  "examples": [
    {
      "PROJECT_NAME": "SpectraMindV50",
      "PROJECT_STAGE": "dev",
      "CONFIG_FILE": "configs/config_v50.yaml",
      "HYDRA_FULL_ERROR": "1",
      "PYTHON_VERSION": "3.11",
      "POETRY_VIRTUALENVS_CREATE": "false",
      "CUDA_VERSION": "12.4",
      "CUDNN_VERSION": "9",
      "LOGS_DIR": "logs",
      "OUT_DIR": "outputs",
      "RUN_HASH_FILE": "run_hash_summary_v50.json",
      "MLFLOW_TRACKING_URI": "http://localhost:5000",
      "WANDB_PROJECT": "spectramind-v50",
      "DATA_ROOT": "data",
      "DVC_REMOTE": "origin",
      "DVC_CACHE_DIR": ".dvc/cache",
      "KAGGLE_COMPETITION": "neurips-2025-ariel",
      "KAGGLE_SUBMISSION_FILE": "outputs/submission.csv",
      "KAGGLE_SUBMISSION_MSG": "SpectraMind V50 submission",
      "DOCKER_IMAGE_NAME": "spectramindv50:dev",
      "DOCKER_CONTAINER_NAME": "spectramindv50",
      "DOCKER_PORT": "8888",
      "SPECTRAMIND_CLI": "spectramind",
      "DIAGNOSTICS_REPORT": "outputs/diagnostics/report.html",
      "ENABLE_RICH_LOGGING": "true",
      "GUI_FRAMEWORK": "none"
    }
  ]
}