{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.org/spectramind/.env.schema.json",
  "title": "SpectraMind V50 .env Schema",
  "description": "JSON Schema to validate required keys and formats for the SpectraMind V50 `.env` file. Use in CI to fail fast on missing or malformed configuration.",
  "type": "object",
  "additionalProperties": true,
  "properties": {
    "PROJECT_NAME": {
      "type": "string",
      "minLength": 1,
      "default": "SpectraMindV50",
      "description": "Human-friendly project name."
    },
    "PROJECT_STAGE": {
      "type": "string",
      "enum": ["dev", "test", "prod"],
      "default": "dev",
      "description": "Deployment stage / environment."
    },
    "CONFIG_FILE": {
      "type": "string",
      "pattern": "^(configs/).+\\.ya?ml$",
      "default": "configs/config_v50.yaml",
      "description": "Hydra root config path."
    },
    "HYDRA_FULL_ERROR": {
      "type": "string",
      "enum": ["0", "1"],
      "default": "1",
      "description": "Show full Hydra exceptions (1 = on)."
    },

    "PYTHON_VERSION": {
      "type": "string",
      "pattern": "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$",
      "default": "3.11",
      "description": "Python version used by Poetry/Docker."
    },
    "POETRY_VIRTUALENVS_CREATE": {
      "type": "string",
      "enum": ["true", "false"],
      "default": "false",
      "description": "Create venvs in Poetry (false when Dockerized)."
    },
    "CUDA_VERSION": {
      "type": "string",
      "pattern": "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$",
      "default": "12.4",
      "description": "CUDA version to align with base image."
    },
    "CUDNN_VERSION": {
      "type": "string",
      "pattern": "^[0-9]+(\\.[0-9]+)?$",
      "default": "9",
      "description": "cuDNN major/minor version."
    },

    "LOGS_DIR": {
      "type": "string",
      "default": "logs",
      "description": "Directory for runtime logs."
    },
    "OUT_DIR": {
      "type": "string",
      "default": "outputs",
      "description": "Directory for pipeline outputs."
    },
    "RUN_HASH_FILE": {
      "type": "string",
      "default": "run_hash_summary_v50.json",
      "description": "File to store run hash summary."
    },
    "MLFLOW_TRACKING_URI": {
      "type": "string",
      "format": "uri",
      "nullable": true,
      "description": "Optional MLflow tracking server URI."
    },
    "WANDB_API_KEY": {
      "type": "string",
      "minLength": 1,
      "nullable": true,
      "description": "Weights & Biases API key (do not commit real values)."
    },
    "WANDB_PROJECT": {
      "type": "string",
      "default": "spectramind-v50",
      "description": "W&B project name."
    },
    "WANDB_ENTITY": {
      "type": "string",
      "nullable": true,
      "description": "W&B entity/org name."
    },

    "DATA_ROOT": {
      "type": "string",
      "default": "data",
      "description": "Root directory for datasets (DVC-managed)."
    },
    "DVC_REMOTE": {
      "type": "string",
      "default": "origin",
      "description": "Default DVC remote name."
    },
    "DVC_CACHE_DIR": {
      "type": "string",
      "default": ".dvc/cache",
      "description": "DVC cache path (local)."
    },
    "LAKEFS_ENDPOINT": {
      "type": "string",
      "format": "uri",
      "nullable": true,
      "description": "lakeFS endpoint (optional), e.g., http://localhost:8000"
    },
    "LAKEFS_ACCESS_KEY": {
      "type": "string",
      "minLength": 1,
      "nullable": true
    },
    "LAKEFS_SECRET_KEY": {
      "type": "string",
      "minLength": 1,
      "nullable": true
    },

    "KAGGLE_USERNAME": {
      "type": "string",
      "minLength": 1,
      "nullable": true
    },
    "KAGGLE_KEY": {
      "type": "string",
      "minLength": 1,
      "nullable": true
    },
    "KAGGLE_COMPETITION": {
      "type": "string",
      "default": "neurips-2025-ariel",
      "description": "Competition slug."
    },
    "KAGGLE_SUBMISSION_FILE": {
      "type": "string",
      "default": "outputs/submission.csv"
    },
    "KAGGLE_SUBMISSION_MSG": {
      "type": "string",
      "default": "SpectraMind V50 submission"
    },

    "DOCKER_IMAGE_NAME": {
      "type": "string",
      "default": "spectramindv50:dev"
    },
    "DOCKER_CONTAINER_NAME": {
      "type": "string",
      "default": "spectramindv50"
    },
    "DOCKER_PORT": {
      "type": "string",
      "pattern": "^[0-9]+$",
      "default": "8888",
      "description": "Port for notebooks/docs if exposed."
    },

    "SPECTRAMIND_CLI": {
      "type": "string",
      "default": "spectramind"
    },
    "DIAGNOSTICS_REPORT": {
      "type": "string",
      "default": "outputs/diagnostics/report.html"
    },
    "ENABLE_RICH_LOGGING": {
      "type": "string",
      "enum": ["true", "false"],
      "default": "true"
    },

    "SECRET_KEY_BASE": {
      "type": "string",
      "minLength": 16,
      "nullable": true,
      "description": "Generic app secret (do not commit actual values)."
    },
    "JWT_SECRET": {
      "type": "string",
      "minLength": 16,
      "nullable": true
    },
    "SERVICE_ACCOUNT_JSON": {
      "type": "string",
      "nullable": true,
      "description": "Path to service account JSON (optional)."
    }
  },

  "required": [
    "PROJECT_NAME",
    "PROJECT_STAGE",
    "CONFIG_FILE",
    "HYDRA_FULL_ERROR",
    "PYTHON_VERSION",
    "POETRY_VIRTUALENVS_CREATE",
    "LOGS_DIR",
    "OUT_DIR",
    "RUN_HASH_FILE",
    "DATA_ROOT",
    "DVC_REMOTE",
    "DVC_CACHE_DIR",
    "KAGGLE_COMPETITION",
    "KAGGLE_SUBMISSION_FILE",
    "KAGGLE_SUBMISSION_MSG",
    "DOCKER_IMAGE_NAME",
    "DOCKER_CONTAINER_NAME",
    "DOCKER_PORT",
    "SPECTRAMIND_CLI",
    "DIAGNOSTICS_REPORT",
    "ENABLE_RICH_LOGGING"
  ],

  "examples": [
    {
      "PROJECT_NAME": "SpectraMindV50",
      "PROJECT_STAGE": "dev",
      "CONFIG_FILE": "configs/config_v50.yaml",
      "HYDRA_FULL_ERROR": "1",
      "PYTHON_VERSION": "3.11",
      "POETRY_VIRTUALENVS_CREATE": "false",
      "CUDA_VERSION": "12.4",
      "CUDNN_VERSION": "9",
      "LOGS_DIR": "logs",
      "OUT_DIR": "outputs",
      "RUN_HASH_FILE": "run_hash_summary_v50.json",
      "MLFLOW_TRACKING_URI": "http://localhost:5000",
      "WANDB_API_KEY": "",
      "WANDB_PROJECT": "spectramind-v50",
      "WANDB_ENTITY": "",
      "DATA_ROOT": "data",
      "DVC_REMOTE": "origin",
      "DVC_CACHE_DIR": ".dvc/cache",
      "LAKEFS_ENDPOINT": "",
      "LAKEFS_ACCESS_KEY": "",
      "LAKEFS_SECRET_KEY": "",
      "KAGGLE_USERNAME": "",
      "KAGGLE_KEY": "",
      "KAGGLE_COMPETITION": "neurips-2025-ariel",
      "KAGGLE_SUBMISSION_FILE": "outputs/submission.csv",
      "KAGGLE_SUBMISSION_MSG": "SpectraMind V50 submission",
      "DOCKER_IMAGE_NAME": "spectramindv50:dev",
      "DOCKER_CONTAINER_NAME": "spectramindv50",
      "DOCKER_PORT": "8888",
      "SPECTRAMIND_CLI": "spectramind",
      "DIAGNOSTICS_REPORT": "outputs/diagnostics/report.html",
      "ENABLE_RICH_LOGGING": "true",
      "SECRET_KEY_BASE": "",
      "JWT_SECRET": "",
      "SERVICE_ACCOUNT_JSON": ""
    }
  ]
}