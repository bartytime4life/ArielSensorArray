# ==============================================================================
# SpectraMind V50 — requirements-kaggle.txt
# Kaggle-friendly runtime (CPU/GPU). Torch is preinstalled on Kaggle.
# Notes:
#   • Avoids heavy/dev tooling (DVC remotes, MLflow, W&B, GUI libs).
#   • Keeps pins aligned with your full requirements to prevent drift.
#   • Safe on Kaggle GPU; install PyG separately inside a notebook if needed.
# ==============================================================================

############################
# Core CLI & Configuration #
############################
typer==0.12.3
rich==13.7.1
hydra-core==1.3.2
omegaconf==2.3.0
pyyaml==6.0.1
pydantic==2.7.1
python-dotenv==1.0.1
packaging==24.1
click==8.1.7
jinja2==3.1.4

##########################
# Scientific Python Stack #
##########################
numpy==1.26.4
scipy==1.13.1
pandas==2.2.2
scikit-learn==1.4.2
joblib==1.4.2
tqdm==4.66.4
psutil==5.9.8

##############################
# PyTorch (preinstalled on KG) #
##############################
# Torch is preinstalled on Kaggle. Do NOT install torch/torchvision here.
# If you must pin in a local env, do it outside this file.

###################################
# Visualization / Diagnostics (light)
###################################
matplotlib==3.8.4
umap-learn==0.5.6
shap==0.45.0

#############
# Utilities #
#############
# Small, useful libs that are commonly available on Kaggle images.
# (Kept minimal to stay fast & compatible.)
# (Add others here only if your notebooks actually import them.)

########
# DVC  #
########
# DVC core is okay to parse pipelines locally; remotes may be restricted on Kaggle.
dvc==3.51.2

# ==============================================================================
# Optional: In your Kaggle Notebook, install PyTorch Geometric wheels like this:
#   import torch, sys, subprocess
#   ver = torch.__version__.split('+')[0]
#   cu  = (torch.version.cuda or 'cpu').replace('.','')
#   idx = f"https://data.pyg.org/whl/torch-{ver}+{'cu'+cu if torch.version.cuda else 'cpu'}.html"
#   subprocess.check_call([sys.executable, "-m", "pip", "install",
#                          "torch-geometric==2.5.3", "-f", idx])
# ==============================================================================