# ==============================================================================
# SpectraMind V50 — requirements-kaggle.txt
# Kaggle-friendly runtime: train/predict/diagnose with minimal friction.
# Torch (GPU-ready) is preinstalled on Kaggle images – do NOT re-pin here.
# ==============================================================================

# ----- Core CLI & Config -----
typer==0.12.3
rich==13.7.1
hydra-core==1.3.2
omegaconf==2.3.0
pyyaml==6.0.1
pydantic==2.7.1
python-dotenv==1.0.1
packaging==24.1
click==8.1.7
jinja2==3.1.4
typing_extensions==4.12.2     # stability helper for torch/pydantic

# ----- Scientific Python Stack -----
numpy==1.26.4
scipy==1.13.1
pandas==2.2.2
scikit-learn==1.4.2
threadpoolctl==3.5.0          # explicit pin for sklearn backend control
joblib==1.4.2
tqdm==4.66.4
psutil==5.9.8

# ----- PyTorch (preinstalled on Kaggle) -----
# torch, torchvision, torchaudio are preinstalled in Kaggle GPU images.
# If you need PyTorch Geometric, install it in the notebook cell with the
# wheel index matching your Torch/CUDA, e.g.:
#   pip install torch-geometric==2.5.3 -f https://data.pyg.org/whl/torch-${TORCH_VER}+${CUDA_TAG}.html

# ----- Visualization / Diagnostics -----
matplotlib==3.8.4
plotly==5.22.0
umap-learn==0.5.6
shap==0.45.0

# ----- Hugging Face (optional, lightweight) -----
transformers==4.43.3
huggingface_hub==0.24.5
datasets==3.0.1

# ==============================================================================
# Notes:
# • Kept light for Kaggle: no DVC/MLflow/W&B/etc. (use them locally/CI instead).
# • Hugging Face libs included for model zoo & datasets convenience.
# • Install PyG via the wheel index in a cell after detecting torch/cuda versions.
# ==============================================================================