# ==============================================================================
# .gitignore — SpectraMind V50 (NeurIPS 2025 Ariel Data Challenge)
# Purpose: Keep Git history clean and reproducible (code + configs only).
# Data, models, and generated artifacts are managed via DVC/LFS and CI.
# Synchronized conceptually with .dvcignore and .dockerignore.
# ==============================================================================

# ===== Python / builds / bytecode =====
__pycache__/
*.py[cod]
*.pyd
*.so
*.dll
*.pyc
*.pyo
*.pdb
*.egg-info/
*.egg
*.whl
build/
dist/

# ===== Python tooling caches =====
.pytest_cache/
.mypy_cache/
.ruff_cache/
.ipynb_checkpoints/

# ===== Virtual envs / package managers =====
.venv/
venv/
env/
ENV/
site-packages/
# Poetry internals (lockfile should be tracked)
.poetry/

# ===== Node / web toolchains (diagrams, dashboards) =====
node_modules/
# Track lockfiles for deterministic builds:
#   package-lock.json / pnpm-lock.yaml / yarn.lock  (DO NOT ignore)

# ===== Editors / IDEs =====
.vscode/
.idea/
*.swp
*.swo

# ===== OS junk =====
.DS_Store
Thumbs.db
Desktop.ini

# ===== Logs & temp files =====
logs/
*.log
*.tmp
*.bak
*.old
*.pid
*.lock
tmp/
temp/

# ===== Datasets, model weights, large binaries =====
# Use DVC/LFS for data artifacts; keep only pointer files (*.dvc) and dvc.yaml in Git.
data/**
!data/.gitkeep
!*.dvc

# Common model/artifact roots (governed by DVC or LFS)
models/**
!models/.gitkeep

# ===== Intermediate & cache outputs (pipeline-generated) =====
outputs/**
!outputs/.gitkeep

# Fine-grained (typically redundant with outputs/**)
# outputs/checkpoints/
# outputs/intermediate/
# outputs/cache/
# outputs/debug/
# outputs/tmp/

# ===== Diagnostics, reports & dashboards (generated) =====
reports/
dashboards/
assets/screenshots/
assets/plots/
assets/tmp/
# Mermaid/diagram outputs live here when exported by Node scripts
outputs/diagrams/
assets/diagrams/
!assets/.gitkeep

# Generated visuals and docs (built by CLI/CI) — avoid blanket ignores by extension elsewhere
# (let DVC track structured CSV/JSON in outputs/diagnostics if needed)
*.pdf
*.png
*.jpg
*.jpeg
*.gif
*.svg
*.htm
*.html

# ===== Submissions (reproducible via CLI) =====
submission.csv
submission.zip
outputs/submission.csv
outputs/submission.zip
outputs/submission_bundle.zip
outputs/submission/**/*.zip
outputs/submission/**/*.csv

# ===== Run products, manifests, and local logs =====
hydra_outputs/
multirun/
run_logs/
manifest.json
diagnostic_summary.json
run_hash_summary_v50.json
version_manifest.json

# ===== Kaggle / competition specifics =====
.kaggle/
kaggle.json
input/
working/

# ===== DVC internals (Git tracks only dvc.yaml and *.dvc pointers) =====
.dvc/cache/
.dvc/tmp/
.dvc/plots/
.dvc/config.local

# ===== ML experiment trackers (local) =====
mlruns/
wandb/
.tensorboard/
.lightning_logs/

# ===== Test coverage / reports =====
coverage/
.coverage*
htmlcov/

# ===== Secrets & local environment =====
.env
.env.*
.envrc
.aws/
.gcloud/
.azure/
ssh_known_hosts
*.pem
*.key

# ===== Archives / bundles (reproducible by CI/CLI) =====
*.tar
*.tar.gz
*.tgz
*.7z
*.zip

# ===== Keep empty essential dirs in Git =====
!outputs/.gitkeep
!assets/.gitkeep
!models/.gitkeep

# ===== DO NOT ignore documentation or notebooks =====
# (We lint & strip outputs via pre-commit; *.md, *.ipynb remain tracked.)
