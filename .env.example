# ==============================================================================
# SpectraMind V50 â€” Example Environment File (.env.example)
# ------------------------------------------------------------------------------
# Copy this file to `.env` and fill in secrets/values for your local, CI, or
# Kaggle runs. Do NOT commit `.env` (only this example template should be tracked).
# ==============================================================================

# -----------------------
# Core Project Settings
# -----------------------
PROJECT_NAME=SpectraMindV50
PROJECT_STAGE=dev                # dev | test | prod
CONFIG_FILE=configs/config_v50.yaml
HYDRA_FULL_ERROR=1               # ensures Hydra shows full error trace

# -----------------------
# Python / Poetry / CUDA
# -----------------------
PYTHON_VERSION=3.11
POETRY_VIRTUALENVS_CREATE=false
CUDA_VERSION=12.4
CUDNN_VERSION=9

# -----------------------
# Logging / Reproducibility
# -----------------------
LOGS_DIR=logs
OUT_DIR=outputs
RUN_HASH_FILE=run_hash_summary_v50.json
MLFLOW_TRACKING_URI=             # e.g. http://localhost:5000 (optional)
WANDB_API_KEY=                   # for Weights & Biases (optional)
WANDB_PROJECT=spectramind-v50
WANDB_ENTITY=

# -----------------------
# Data / DVC / Storage
# -----------------------
DATA_ROOT=data
DVC_REMOTE=origin
DVC_CACHE_DIR=.dvc/cache
LAKEFS_ENDPOINT=                 # optional object store (e.g. http://localhost:8000)
LAKEFS_ACCESS_KEY=
LAKEFS_SECRET_KEY=

# -----------------------
# Kaggle Integration
# -----------------------
KAGGLE_USERNAME=
KAGGLE_KEY=
KAGGLE_COMPETITION=neurips-2025-ariel
KAGGLE_SUBMISSION_FILE=outputs/submission.csv
KAGGLE_SUBMISSION_MSG="SpectraMind V50 submission"

# -----------------------
# Docker Compose Overrides
# -----------------------
DOCKER_IMAGE_NAME=spectramindv50:dev
DOCKER_CONTAINER_NAME=spectramindv50
DOCKER_PORT=8888                 # port for Jupyter/Lab if exposed

# -----------------------
# CLI / Dashboard
# -----------------------
SPECTRAMIND_CLI=spectramind
DIAGNOSTICS_REPORT=outputs/diagnostics/report.html
ENABLE_RICH_LOGGING=true

# -----------------------
# Security / Secrets
# -----------------------
# Generate real values locally or in CI. DO NOT COMMIT filled secrets.
SECRET_KEY_BASE=
JWT_SECRET=
SERVICE_ACCOUNT_JSON=            # path to service account file if needed