# ==============================================================================
# SpectraMind V50 â€” Example Environment File (.env.example)
# ------------------------------------------------------------------------------
# Copy this file to `.env` and fill in secrets/values for local, CI, or Kaggle.
# Do NOT commit `.env` (only this example template should be tracked).
# ==============================================================================

# -----------------------
# Core Project Settings
# -----------------------
PROJECT_NAME=SpectraMindV50
PROJECT_STAGE=dev                          # dev | test | prod
CONFIG_FILE=configs/config_v50.yaml
HYDRA_FULL_ERROR=1                         # 1 = show full Hydra error trace
HYDRA_RUN_DIR=outputs/hydra/${now}         # Hydra run dir with interpolation
HYDRA_OVERRIDE=                            # optional CLI overrides
CONFIG_HASH_STRICT=true                    # fail if config hash drifts

# -----------------------
# Python / Poetry / CUDA
# -----------------------
PYTHON_VERSION=3.11
POETRY_VIRTUALENVS_CREATE=false
CUDA_VERSION=12.4
CUDNN_VERSION=9
TORCH_USE_CUDA=true
TORCH_USE_MPS=false

# -----------------------
# Logging / Reproducibility
# -----------------------
LOGS_DIR=logs
OUT_DIR=outputs
RUN_HASH_FILE=run_hash_summary_v50.json
EVENT_LOG_JSONL=logs/v50_event_log.jsonl
DEBUG_LOG_MD=logs/v50_debug_log.md

MLFLOW_TRACKING_URI=                       # e.g. http://localhost:5000 (optional)
MLFLOW_EXPERIMENT_NAME=spectramind-v50
WANDB_API_KEY=                             # W&B API key (optional)
WANDB_PROJECT=spectramind-v50
WANDB_ENTITY=

# -----------------------
# Hugging Face Integration
# -----------------------
HF_HOME=~/.cache/huggingface
HF_TOKEN=                                  # optional auth token for private models

# -----------------------
# Data / DVC / lakeFS
# -----------------------
DATA_ROOT=data
DVC_REMOTE=origin
DVC_CACHE_DIR=.dvc/cache

LAKEFS_ENDPOINT=                           # e.g. http://localhost:8000
LAKEFS_ACCESS_KEY=
LAKEFS_SECRET_KEY=

# -----------------------
# Kaggle Integration
# -----------------------
KAGGLE_USERNAME=
KAGGLE_KEY=
KAGGLE_COMPETITION=neurips-2025-ariel
KAGGLE_SUBMISSION_FILE=outputs/submission.csv
KAGGLE_SUBMISSION_MSG="SpectraMind V50 submission"
RUNTIME_MAX_HOURS=9                        # Kaggle runtime envelope (hours)

# -----------------------
# Docker Overrides
# -----------------------
DOCKER_IMAGE_NAME=spectramindv50:dev
DOCKER_CONTAINER_NAME=spectramindv50
DOCKER_PORT=8888                           # port for Jupyter/Lab

# -----------------------
# CLI / Diagnostics / Dashboard
# -----------------------
SPECTRAMIND_CLI=spectramind
SELFTEST_DEEP=false                        # deep selftest (Hydra/DVC/CUDA checks)
DIAGNOSTICS_REPORT=outputs/diagnostics/report.html
DIAGNOSTICS_JSON=outputs/diagnostics/diagnostic_summary.json
DIAGNOSTICS_HTML_OPEN=false
DIAG_ENABLE_UMAP=true
DIAG_ENABLE_TSNE=true
DIAG_ENABLE_SHAP=true
DIAG_ENABLE_SYMBOLIC=true
SUBMISSION_BUNDLE=outputs/submission_bundle.zip

ENABLE_RICH_LOGGING=true
LOG_LEVEL=INFO                             # DEBUG | INFO | WARNING | ERROR

# -----------------------
# Reproducibility
# -----------------------
SEED=1337
NUM_WORKERS=4

# -----------------------
# Security / Secrets
# -----------------------
SECRET_KEY_BASE=
JWT_SECRET=
SERVICE_ACCOUNT_JSON=                      # path to service account file if needed

# -----------------------
# GUI Framework (optional)
# -----------------------
GUI_FRAMEWORK=none                         # qt | electron | react | none